<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>LionNet</title>
        <description>Programowanie, sieci komputerowe, informatyka.</description>      
        <link>http://lion.net.pl</link>
        <language>pl</language>
        <generator>Sculpin</generator>
        <category>IT</category>
        <atom:link href="http://lion.net.pl/blog/feed.xml" rel="self" type="application/rss+xml" />
                <item>
            <title>Analiza wymagań dla serwera dawek leków</title>
            <dc:creator>Maciej Lew</dc:creator>
                                    <category>DSP2017</category>
                        <category>C++</category>
                        <category>DDS</category>
                                    <content:encoded>&lt;p&gt;Po wyborze technologii w jakiej rozwijany będzie DDS przyszedł czas na zastanowienie
się jaki w ogóle będzie cel tego projektu (poza nauką C++), co da się zrobić w
czasie trwania konkursu (zostało jeszcze trochę ponad 2 miesiące). Czas na MoSCoW.&lt;/p&gt;

&lt;h3 id=&quot;no-wi%C4%99c-czym-b%C4%99dzie-ten-dds%3F&quot;&gt;No więc czym będzie ten DDS?&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;/2016/04/29/podroz-na-wschod-roadmap-z-moscow.html&quot;&gt;O metodzie MoSCoW miałem okazję napisać rok temu&lt;/a&gt;, podczas rozwijania &lt;a href=&quot;/2016/03/01/dam-sie-poznac.html&quot;&gt;DDF&lt;/a&gt;.
Wtedy spisanie wymagań dla aplikacji mobilnej obliczającej dawki leków pozwoliło mnie samemu określić kierunki rozwoju DDF, na których należy się skupić, aby móc uznać projekt za ukończony (przynajmniej w ramach konkursu). Po fazie poszukiwań rozwiązań technologicznych jakie zastosuję w DDS (C++, &lt;a href=&quot;/2017/03/14/pistacja.html&quot;&gt;pistache&lt;/a&gt;, rapidjson), przyszedł właściwy moment aby spisać krótką listę zadań dla DDS:&lt;/p&gt;

&lt;h4 id=&quot;dds-musi-mie%C4%87%3A&quot;&gt;DDS musi mieć:&lt;/h4&gt;

&lt;h5 id=&quot;lista-lek%C3%B3w&quot;&gt;Lista leków&lt;/h5&gt;

&lt;p&gt;Jedna z metod webserwisu powinna zwrócić użytkownikowi pełną listę leków. Lista zostanie zwrócona w postaci dokumentu JSON (jak z resztą wszystkie odpowiedzi z DDS). &lt;a href=&quot;/2016/03/12/format-opisu-lekow-w-ddf.html&quot;&gt;Format odpowiedzi będzie identyczny z tym znanym z DDS&lt;/a&gt;. Źródło informacji o lekach powinno być modyfikowalne (pliki, baza danych, inne web serwisy).&lt;/p&gt;

&lt;h5 id=&quot;dawkowanie-leku&quot;&gt;Dawkowanie leku&lt;/h5&gt;

&lt;p&gt;Kolejny z webserwisów będzie umożliwiał pobranie szczegółowych informacji dotyczących dawkowania danego leku. Tu tak samo spodziewajcie się odpowiedzi w JSON w formacie z DDF.&lt;/p&gt;

&lt;h4 id=&quot;dds-powinien-posiada%C4%87%3A&quot;&gt;DDS powinien posiadać:&lt;/h4&gt;

&lt;h5 id=&quot;kalkulator-dawek&quot;&gt;Kalkulator dawek&lt;/h5&gt;

&lt;p&gt;Aplikacja powinna także umożliwiać obliczenie dawki leku po podaniu wagi pacjenta. Będzie to ukłon w kierunku użytkowników niekorzystających z aplikacji zbudowanych na podstawie DDF.&lt;/p&gt;

&lt;h5 id=&quot;kalkulator-rozpuszczania-lek%C3%B3w&quot;&gt;Kalkulator rozpuszczania leków&lt;/h5&gt;

&lt;p&gt;&lt;strong&gt;Kalkulator ten będzie nowością&lt;/strong&gt;. Nie znajdziecie tego w tej chwili w DDS, choć być może kiedyś i tam to dorobię. Kalkulator ten będzie obliczał i zwracał odpowiedź na pytanie jak uzyskać lek o dowolnym stężeniu rozpuszczając lek o bazowym stężeniu w innej substancji. Format odpowiedzi zostanie ustalony w trakcie prac nad tą częścią systemu.&lt;/p&gt;

&lt;h4 id=&quot;dds-m%C3%B3g%C5%82by-posiada%C4%87%3A&quot;&gt;DDS mógłby posiadać:&lt;/h4&gt;

&lt;h5 id=&quot;system-logowania&quot;&gt;System logowania&lt;/h5&gt;

&lt;p&gt;DDS mógłby opcjonalnie pozwalać włączyć autentykację i autoryzację użytkowników.&lt;/p&gt;

&lt;h5 id=&quot;szyfrowanie-po%C5%82%C4%85czenia&quot;&gt;Szyfrowanie połączenia&lt;/h5&gt;

&lt;p&gt;System mógłby opcjonalnie pozwalać włączyć tryb SSL.&lt;/p&gt;

&lt;h5 id=&quot;wersja-produktu&quot;&gt;Wersja produktu&lt;/h5&gt;

&lt;p&gt;Aplikacja mogłaby zwracać jedną z metod informację o swojej wersji.&lt;/p&gt;

&lt;h3 id=&quot;i-to-wszystko-za-darmoszk%C4%99%3F-dost%C4%99pne-dla-ka%C5%BCdego%3F&quot;&gt;I to wszystko za darmoszkę? Dostępne dla każdego?&lt;/h3&gt;

&lt;p&gt;Tak. Wszystko będzie &lt;a href=&quot;https://github.com/maciejlew/drug-dose-server&quot;&gt;za darmo do pobrania, zmodyfikowania&lt;/a&gt; i wykorzystania. Super, co nie?&lt;/p&gt;
</content:encoded>
            <pubDate>2017-03-20T20:00:00+01:00</pubDate>
            <link>http://lion.net.pl/2017/03/20/analiza-wymagan-dla-serwera-dawek-lekow.html</link>
            <atom:link href="http://lion.net.pl/2017/03/20/analiza-wymagan-dla-serwera-dawek-lekow.html" rel="self" type="application/rss+xml" />
            <guid isPermaLink="true">http://lion.net.pl/2017/03/20/analiza-wymagan-dla-serwera-dawek-lekow.html</guid>
        </item>
                <item>
            <title>Jak włączyć tryb debug w cmake?</title>
            <dc:creator>Maciej Lew</dc:creator>
                                    <category>DSP2017</category>
                        <category>DDS</category>
                        <category>C++</category>
                                    <content:encoded>&lt;p&gt;W tym krótkim wpisie pokażę jak włączyć tryb debug podczas wykonywania Makefile
wygenerowanego przez narzędzie cmake.&lt;/p&gt;

&lt;h3 id=&quot;po-co-debugowa%C4%87-makefile%3F&quot;&gt;Po co debugować Makefile?&lt;/h3&gt;

&lt;p&gt;Natrafiłem dziś na dziwny problem podczas budowania &lt;a href=&quot;http://lion.net.pl/2017/03/01/powtorka-z-rozrywki.html&quot;&gt;aplikacji DDS&lt;/a&gt;. Błędy kompilacji
wskazywały na problem z linkowaniem zewnętrznych bibliotek. Wygenerowany przez
cmake plik Makefile był długi i skomplikowany a ja nie do końca wiedziałem co
w rzeczywistości dzieje się podczas wykonywania polecenia make. Przydałoby się
zobaczyć polecenie przekazywane do g++.&lt;/p&gt;

&lt;h3 id=&quot;konfiguracja-cmake&quot;&gt;Konfiguracja cmake&lt;/h3&gt;

&lt;p&gt;Podczas budowania pliku Makefile, cmake tworzy także plik CMakeCache.txt. W pliku
tym znajduje się dodatkowa konfiguracja dla make. Znajdziesz tam opcję 
&lt;em&gt;CMAKE_VERBOSE_MAKEFILE&lt;/em&gt; z wartością domyślnie ustawioną na &lt;em&gt;FALSE&lt;/em&gt;. Aby zobaczyć 
bardziej szczegółowe logi podczas wykonywania polecenia make należy ustawić tę
opcję na &lt;em&gt;TRUE&lt;/em&gt;.&lt;/p&gt;

&lt;h3 id=&quot;co-mo%C5%BCna-zobaczy%C4%87%3F&quot;&gt;Co można zobaczyć?&lt;/h3&gt;

&lt;p&gt;Z opcją &lt;em&gt;CMAKE_VERBOSE_MAKEFILE&lt;/em&gt; równą &lt;em&gt;FALSE&lt;/em&gt; przykładowe wyjście z make wygląda tak:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ make
[100%] Building CXX object CMakeFiles/http_server.dir/src/main.cpp.o
Linking CXX executable http_server
[100%] Built target http_server
$ make
[100%] Built target http_server
$ make clean
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Z tą samą opcją ustawioną na &lt;em&gt;TRUE&lt;/em&gt; wyjście wygląda następująco:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ make
/usr/bin/cmake -H/home/user/drug-dose-server -B/home/user/drug-dose-server --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/user/drug-dose-server/CMakeFiles /home/user/drug-dose-server/CMakeFiles/progress.marks
make -f CMakeFiles/Makefile2 all
make[1]: Wejście do katalogu &#039;/home/user/drug-dose-server&#039;
make -f CMakeFiles/http_server.dir/build.make CMakeFiles/http_server.dir/depend
make[2]: Wejście do katalogu &#039;/home/user/drug-dose-server&#039;
cd /home/user/drug-dose-server &amp;amp;&amp;amp; /usr/bin/cmake -E cmake_depends &quot;Unix Makefiles&quot; /home/user/drug-dose-server /home/user/drug-dose-server /home/user/drug-dose-server /home/user/drug-dose-server /home/user/drug-dose-server/CMakeFiles/http_server.dir/DependInfo.cmake --color=
make[2]: Opuszczenie katalogu &#039;/home/user/drug-dose-server&#039;
make -f CMakeFiles/http_server.dir/build.make CMakeFiles/http_server.dir/build
make[2]: Wejście do katalogu &#039;/home/user/drug-dose-server&#039;
Linking CXX executable http_server
/usr/bin/cmake -E cmake_link_script CMakeFiles/http_server.dir/link.txt --verbose=1
/usr/bin/c++    -std=c++11 -pthread    CMakeFiles/http_server.dir/src/main.cpp.o  -o http_server -rdynamic -lnet_static 
make[2]: Opuszczenie katalogu &#039;/home/user/drug-dose-server&#039;
/usr/bin/cmake -E cmake_progress_report /home/user/drug-dose-server/CMakeFiles  1
[100%] Built target http_server
make[1]: Opuszczenie katalogu &#039;/home/user/drug-dose-server&#039;
/usr/bin/cmake -E cmake_progress_start /home/user/drug-dose-server/CMakeFiles 0
$ make
/usr/bin/cmake -H/home/user/drug-dose-server -B/home/user/drug-dose-server --check-build-system CMakeFiles/Makefile.cmake 0
/usr/bin/cmake -E cmake_progress_start /home/user/drug-dose-server/CMakeFiles /home/user/drug-dose-server/CMakeFiles/progress.marks
make -f CMakeFiles/Makefile2 all
make[1]: Wejście do katalogu &#039;/home/user/drug-dose-server&#039;
make -f CMakeFiles/http_server.dir/build.make CMakeFiles/http_server.dir/depend
make[2]: Wejście do katalogu &#039;/home/user/drug-dose-server&#039;
cd /home/user/drug-dose-server &amp;amp;&amp;amp; /usr/bin/cmake -E cmake_depends &quot;Unix Makefiles&quot; /home/user/drug-dose-server /home/user/drug-dose-server /home/user/drug-dose-server /home/user/drug-dose-server /home/user/drug-dose-server/CMakeFiles/http_server.dir/DependInfo.cmake --color=
make[2]: Opuszczenie katalogu &#039;/home/user/drug-dose-server&#039;
make -f CMakeFiles/http_server.dir/build.make CMakeFiles/http_server.dir/build
make[2]: Wejście do katalogu &#039;/home/user/drug-dose-server&#039;
make[2]: Nie ma nic do zrobienia w &#039;CMakeFiles/http_server.dir/build&#039;.
make[2]: Opuszczenie katalogu &#039;/home/user/drug-dose-server&#039;
/usr/bin/cmake -E cmake_progress_report /home/user/drug-dose-server/CMakeFiles  1
[100%] Built target http_server
make[1]: Opuszczenie katalogu &#039;/home/user/drug-dose-server&#039;
/usr/bin/cmake -E cmake_progress_start /home/user/drug-dose-server/CMakeFiles 0
$ make clean
make -f CMakeFiles/Makefile2 clean
make[1]: Wejście do katalogu &#039;/home/user/drug-dose-server&#039;
make -f CMakeFiles/http_server.dir/build.make CMakeFiles/http_server.dir/clean
make[2]: Wejście do katalogu &#039;/home/user/drug-dose-server&#039;
/usr/bin/cmake -P CMakeFiles/http_server.dir/cmake_clean.cmake
make[2]: Opuszczenie katalogu &#039;/home/user/drug-dose-server&#039;
make[1]: Opuszczenie katalogu &#039;/home/user/drug-dose-server&#039;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Jak widać log jest bardziej szczegółowy. Widać tu przede wszystkim polecenie
przekazywane do g++ (c++) podczas kompilacji, co może bardzo pomóc w dalszym
debugowaniu ewentualnych problemów.&lt;/p&gt;
</content:encoded>
            <pubDate>2017-03-15T21:00:00+01:00</pubDate>
            <link>http://lion.net.pl/2017/03/15/jak-wlaczyc-tryb-debug-w-cmake.html</link>
            <atom:link href="http://lion.net.pl/2017/03/15/jak-wlaczyc-tryb-debug-w-cmake.html" rel="self" type="application/rss+xml" />
            <guid isPermaLink="true">http://lion.net.pl/2017/03/15/jak-wlaczyc-tryb-debug-w-cmake.html</guid>
        </item>
                <item>
            <title>Pistacja</title>
            <dc:creator>Maciej Lew</dc:creator>
                                    <category>DSP2017</category>
                        <category>DDS</category>
                        <category>C++</category>
                                    <content:encoded>&lt;p&gt;Tworzenie aplikacji w modelu REST w języku C++ może stać się prostsze z frameworkiem
Pistache. Jak go zainstalować? Czytaj dalej!&lt;/p&gt;

&lt;h3 id=&quot;pistache-c%2B%2B-rest-framework&quot;&gt;Pistache C++ REST Framework&lt;/h3&gt;

&lt;p&gt;Pistache jest całkiem nowym projektem, wydanym na świat trochę ponad rok temu przez
Mathieu Stefani z Datacratic. Warto dać mu jednak już teraz szanse. Napisany jest
w C++11, jego struktura wydaje się być bardzo przemyślana, a obsługa intuicyjna.&lt;/p&gt;

&lt;p&gt;Informacje o frameworku można znaleźć na jego &lt;a href=&quot;http://pistache.io/&quot;&gt;oficjalnej witrynie&lt;/a&gt;, a &lt;a href=&quot;https://github.com/oktal/pistache&quot;&gt;źródła na
GitHubie&lt;/a&gt;. Nie ma na tą chwilę jednak paczek deb, binarek dla Windows czy innych 
gotowych do ściągnięcia plików. Pozostaje nam samodzielna kompilacja, która jest
raczej prosta, ale opiszę ja poniżej na wypadek gdybyś miał problem z uruchomieniem
i przetestowaniem tej biblioteki.&lt;/p&gt;

&lt;h4 id=&quot;instalacja&quot;&gt;Instalacja&lt;/h4&gt;

&lt;p&gt;Należy przede wszystkim pobrać źródła frameworka z GitHub. Możesz pobrać paczkę
ZIP, ale najwygodniejsze będzie sklonowanie repozytorium:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git clone https://github.com/oktal/pistache.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Po pobraniu plików należy w katalogu projektu wykonać następujące polecenia:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mkdir build
cd build
cmake -G &quot;Unix Makefiles&quot; -DCMAKE_BUILD_TYPE=Release ..
make
sudo make install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Jeśli nie chcesz (lub nie możesz) wykonać polecenia &lt;em&gt;make install&lt;/em&gt; z prawami
superużytkownika możesz podczas konfiguracji podać opcjonalny parametr wskazujący 
ścieżkę w której chcesz zainstalować bibliotekę:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cmake -G &quot;Unix Makefiles&quot; -DCMAKE_BUILD_TYPE=Release DCMAKE_INSTALL_PREFIX:PATH=/home/user  ..
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;cmake może narzekać na brak bibliotek gtest i rapidjson. Są one opcjonalne. Jeśli
używasz Debiana to ucieszy Cię pewnie fakt że są gotowe paczki dla tych narzędzi 
do pobrania z repozytorium. Może kiedyś pistache także trafi do repo Debiana...&lt;/p&gt;

&lt;p&gt;Przykładowe wyjście z polecenia konfiguracji wygląda następująco:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cmake -G &quot;Unix Makefiles&quot; -DCMAKE_BUILD_TYPE=Release ..
-- The C compiler identification is GNU 4.9.2
-- The CXX compiler identification is GNU 4.9.2
-- Check for working C compiler: /usr/bin/cc
-- Check for working C compiler: /usr/bin/cc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Check for working CXX compiler: /usr/bin/c++
-- Check for working CXX compiler: /usr/bin/c++ -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Performing Test COMPILER_SUPPORTS_CXX11
-- Performing Test COMPILER_SUPPORTS_CXX11 - Success
-- Performing Test COMPILER_SUPPORTS_CXX0X
-- Performing Test COMPILER_SUPPORTS_CXX0X - Success
CMake Warning at examples/CMakeLists.txt:16 (find_package):
  By not providing &quot;FindRapidJSON.cmake&quot; in CMAKE_MODULE_PATH this project
  has asked CMake to find a package configuration file provided by
  &quot;RapidJSON&quot;, but CMake did not find one.

  Could not find a package configuration file provided by &quot;RapidJSON&quot; with
  any of the following names:

    RapidJSONConfig.cmake
    rapidjson-config.cmake

  Add the installation prefix of &quot;RapidJSON&quot; to CMAKE_PREFIX_PATH or set
  &quot;RapidJSON_DIR&quot; to a directory containing one of the above files.  If
  &quot;RapidJSON&quot; provides a separate development package or SDK, be sure it has
  been installed.


-- Could NOT find GTest (missing:  GTEST_LIBRARY GTEST_MAIN_LIBRARY) 
-- Found PythonInterp: /usr/bin/python (found version &quot;2.7.9&quot;) 
-- Looking for include file pthread.h
-- Looking for include file pthread.h - found
-- Looking for pthread_create
-- Looking for pthread_create - not found
-- Looking for pthread_create in pthreads
-- Looking for pthread_create in pthreads - not found
-- Looking for pthread_create in pthread
-- Looking for pthread_create in pthread - found
-- Found Threads: TRUE  
-- Configuring done
-- Generating done
-- Build files have been written to: /home/user/pistache/build
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;a z polecenia budowania tak:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ make
Scanning dependencies of target net
[  1%] Building CXX object src/CMakeFiles/net.dir/common/tcp.cc.o
[  3%] Building CXX object src/CMakeFiles/net.dir/common/net.cc.o
[  5%] Building CXX object src/CMakeFiles/net.dir/common/description.cc.o
[  7%] Building CXX object src/CMakeFiles/net.dir/common/transport.cc.o
[  9%] Building CXX object src/CMakeFiles/net.dir/common/http_defs.cc.o
[ 11%] Building CXX object src/CMakeFiles/net.dir/common/mime.cc.o
[ 13%] Building CXX object src/CMakeFiles/net.dir/common/reactor.cc.o
[ 15%] Building CXX object src/CMakeFiles/net.dir/common/http_headers.cc.o
[ 17%] Building CXX object src/CMakeFiles/net.dir/common/http_header.cc.o
[ 19%] Building CXX object src/CMakeFiles/net.dir/common/cookie.cc.o
[ 21%] Building CXX object src/CMakeFiles/net.dir/common/timer_pool.cc.o
[ 23%] Building CXX object src/CMakeFiles/net.dir/common/http.cc.o
[ 25%] Building CXX object src/CMakeFiles/net.dir/common/stream.cc.o
[ 26%] Building CXX object src/CMakeFiles/net.dir/common/os.cc.o
[ 28%] Building CXX object src/CMakeFiles/net.dir/common/peer.cc.o
[ 30%] Building CXX object src/CMakeFiles/net.dir/server/listener.cc.o
[ 32%] Building CXX object src/CMakeFiles/net.dir/server/router.cc.o
[ 34%] Building CXX object src/CMakeFiles/net.dir/server/endpoint.cc.o
[ 36%] Building CXX object src/CMakeFiles/net.dir/client/client.cc.o
Linking CXX shared library libnet.so
[ 36%] Built target net
Scanning dependencies of target net_static
[ 38%] Building CXX object src/CMakeFiles/net_static.dir/common/tcp.cc.o
[ 40%] Building CXX object src/CMakeFiles/net_static.dir/common/net.cc.o
[ 42%] Building CXX object src/CMakeFiles/net_static.dir/common/description.cc.o
[ 44%] Building CXX object src/CMakeFiles/net_static.dir/common/transport.cc.o
[ 46%] Building CXX object src/CMakeFiles/net_static.dir/common/http_defs.cc.o
[ 48%] Building CXX object src/CMakeFiles/net_static.dir/common/mime.cc.o
[ 50%] Building CXX object src/CMakeFiles/net_static.dir/common/reactor.cc.o
[ 51%] Building CXX object src/CMakeFiles/net_static.dir/common/http_headers.cc.o
[ 53%] Building CXX object src/CMakeFiles/net_static.dir/common/http_header.cc.o
[ 55%] Building CXX object src/CMakeFiles/net_static.dir/common/cookie.cc.o
[ 57%] Building CXX object src/CMakeFiles/net_static.dir/common/timer_pool.cc.o
[ 59%] Building CXX object src/CMakeFiles/net_static.dir/common/http.cc.o
[ 61%] Building CXX object src/CMakeFiles/net_static.dir/common/stream.cc.o
[ 63%] Building CXX object src/CMakeFiles/net_static.dir/common/os.cc.o
[ 65%] Building CXX object src/CMakeFiles/net_static.dir/common/peer.cc.o
[ 67%] Building CXX object src/CMakeFiles/net_static.dir/server/listener.cc.o
[ 69%] Building CXX object src/CMakeFiles/net_static.dir/server/router.cc.o
[ 71%] Building CXX object src/CMakeFiles/net_static.dir/server/endpoint.cc.o
[ 73%] Building CXX object src/CMakeFiles/net_static.dir/client/client.cc.o
Linking CXX static library libnet_static.a
[ 73%] Built target net_static
Scanning dependencies of target custom_header
[ 75%] Building CXX object examples/CMakeFiles/custom_header.dir/custom_header.cc.o
Linking CXX executable custom_header
[ 75%] Built target custom_header
Scanning dependencies of target hello_server
[ 76%] Building CXX object examples/CMakeFiles/hello_server.dir/hello_server.cc.o
Linking CXX executable hello_server
[ 76%] Built target hello_server
Scanning dependencies of target http_client
[ 78%] Building CXX object examples/CMakeFiles/http_client.dir/http_client.cc.o
Linking CXX executable http_client
[ 78%] Built target http_client
Scanning dependencies of target http_server
[ 80%] Building CXX object examples/CMakeFiles/http_server.dir/http_server.cc.o
Linking CXX executable http_server
[ 80%] Built target http_server
Scanning dependencies of target rest_server
[ 82%] Building CXX object examples/CMakeFiles/rest_server.dir/rest_server.cc.o
Linking CXX executable rest_server
[ 82%] Built target rest_server
Scanning dependencies of target gtest
[ 84%] Building CXX object googletest-release-1.7.0/CMakeFiles/gtest.dir/src/gtest-all.cc.o
Linking CXX static library libgtest.a
[ 84%] Built target gtest
Scanning dependencies of target gtest_main
[ 86%] Building CXX object googletest-release-1.7.0/CMakeFiles/gtest_main.dir/src/gtest_main.cc.o
Linking CXX static library libgtest_main.a
[ 86%] Built target gtest_main
Scanning dependencies of target run_async_test
[ 88%] Building CXX object tests/CMakeFiles/run_async_test.dir/async_test.cc.o
Linking CXX executable run_async_test
[ 88%] Built target run_async_test
Scanning dependencies of target run_cookie_test
[ 90%] Building CXX object tests/CMakeFiles/run_cookie_test.dir/cookie_test.cc.o
Linking CXX executable run_cookie_test
[ 90%] Built target run_cookie_test
Scanning dependencies of target run_headers_test
[ 92%] Building CXX object tests/CMakeFiles/run_headers_test.dir/headers_test.cc.o
Linking CXX executable run_headers_test
[ 92%] Built target run_headers_test
Scanning dependencies of target run_mime_test
[ 94%] Building CXX object tests/CMakeFiles/run_mime_test.dir/mime_test.cc.o
Linking CXX executable run_mime_test
[ 94%] Built target run_mime_test
Scanning dependencies of target run_router_test
[ 96%] Building CXX object tests/CMakeFiles/run_router_test.dir/router_test.cc.o
Linking CXX executable run_router_test
[ 96%] Built target run_router_test
Scanning dependencies of target run_typeid_test
[ 98%] Building CXX object tests/CMakeFiles/run_typeid_test.dir/typeid_test.cc.o
Linking CXX executable run_typeid_test
[ 98%] Built target run_typeid_test
Scanning dependencies of target run_view_test
[100%] Building CXX object tests/CMakeFiles/run_view_test.dir/view_test.cc.o
Linking CXX executable run_view_test
[100%] Built target run_view_test
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;natomiast z polecenia instalacji tak:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ make install
[ 36%] Built target net
[ 73%] Built target net_static
[ 75%] Built target custom_header
[ 76%] Built target hello_server
[ 78%] Built target http_client
[ 80%] Built target http_server
[ 82%] Built target rest_server
[ 84%] Built target gtest
[ 86%] Built target gtest_main
[ 88%] Built target run_async_test
[ 90%] Built target run_cookie_test
[ 92%] Built target run_headers_test
[ 94%] Built target run_mime_test
[ 96%] Built target run_router_test
[ 98%] Built target run_typeid_test
[100%] Built target run_view_test
Install the project...
-- Install configuration: &quot;Release&quot;
-- Installing: /usr/local/include/pistache/reactor.h
-- Installing: /usr/local/include/pistache/http_defs.h
-- Installing: /usr/local/include/pistache/stream.h
-- Installing: /usr/local/include/pistache/timer_pool.h
-- Installing: /usr/local/include/pistache/prototype.h
-- Installing: /usr/local/include/pistache/flags.h
-- Installing: /usr/local/include/pistache/endpoint.h
-- Installing: /usr/local/include/pistache/peer.h
-- Installing: /usr/local/include/pistache/http.h
-- Installing: /usr/local/include/pistache/http_headers.h
-- Installing: /usr/local/include/pistache/mime.h
-- Installing: /usr/local/include/pistache/iterator_adapter.h
-- Installing: /usr/local/include/pistache/net.h
-- Installing: /usr/local/include/pistache/common.h
-- Installing: /usr/local/include/pistache/tcp.h
-- Installing: /usr/local/include/pistache/optional.h
-- Installing: /usr/local/include/pistache/http_header.h
-- Installing: /usr/local/include/pistache/view.h
-- Installing: /usr/local/include/pistache/async.h
-- Installing: /usr/local/include/pistache/listener.h
-- Installing: /usr/local/include/pistache/mailbox.h
-- Installing: /usr/local/include/pistache/os.h
-- Installing: /usr/local/include/pistache/cookie.h
-- Installing: /usr/local/include/pistache/typeid.h
-- Installing: /usr/local/include/pistache/client.h
-- Installing: /usr/local/include/pistache/router.h
-- Installing: /usr/local/include/pistache/transport.h
-- Installing: /usr/local/include/pistache/description.h
-- Installing: /usr/local/lib/libnet_static.a
-- Installing: /usr/local/lib/libnet.so
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;testowanie&quot;&gt;Testowanie&lt;/h4&gt;

&lt;p&gt;Warto sprawdzić czy wszystko działa tak jak powinno. Ja przetestowałem to lekko
modyfikując przykład ze strony frameworka, tworząc kontroler dla żądania przesłania
wersji &lt;a href=&quot;http://lion.net.pl/2017/03/01/powtorka-z-rozrywki.html&quot;&gt;aplikacji DDS&lt;/a&gt;. Źródła są do podejrzenia na &lt;a href=&quot;https://github.com/maciejlew/drug-dose-server&quot;&gt;GitHubie&lt;/a&gt;. Z rzeczy
na jakie należy zwrócić uwagę podczas kompilacji tych przykładów to by użyć flag
&lt;em&gt;-std=c++11&lt;/em&gt; oraz &lt;em&gt;-pthread&lt;/em&gt;. Jeśli nie wiesz jak to zrobić podpowiedź znajdziesz
w pliku &lt;em&gt;CMakeLists.txt&lt;/em&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#include &amp;lt;cstdlib&amp;gt;

#include &quot;pistache/endpoint.h&quot;

#define DDS_VERSION &quot;0.1.0&quot;

using namespace Net;

class VersionHandler : public Http::Handler {
public:

    HTTP_PROTOTYPE(VersionHandler)

    void onRequest(const Http::Request&amp;amp; request, Http::ResponseWriter response) {
         response.send(Http::Code::Ok, &quot;DDS &quot; DDS_VERSION);
    }
};

int main() {
    Http::listenAndServe&amp;lt;VersionHandler&amp;gt;(&quot;*:9080&quot;);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Po kompilacji otrzymujemy ważący około 600kB serwer HTTP odpowiadający na żądanie
GET, do którego napisania, przy pomocy frameworka Pistache, wystarczy jedynie około
15 linii kodu!&lt;/p&gt;

&lt;h4 id=&quot;co-dalej%3F&quot;&gt;Co dalej?&lt;/h4&gt;

&lt;p&gt;Możliwości frameworka Pistache będę poznawał i prezentował wraz z rozwojem &lt;a href=&quot;http://lion.net.pl/2017/03/01/powtorka-z-rozrywki.html&quot;&gt;mojej
aplikacji konkursowej DDS&lt;/a&gt;. Jeśli także dopiero zaczynasz z nim swoją przygodę 
zapraszam do śledzenia kategorii &lt;a href=&quot;http://lion.net.pl/blog/tags/#DSP2017&quot;&gt;DSP2017&lt;/a&gt; na moim blogu!&lt;/p&gt;
</content:encoded>
            <pubDate>2017-03-14T20:00:00+01:00</pubDate>
            <link>http://lion.net.pl/2017/03/14/pistacja.html</link>
            <atom:link href="http://lion.net.pl/2017/03/14/pistacja.html" rel="self" type="application/rss+xml" />
            <guid isPermaLink="true">http://lion.net.pl/2017/03/14/pistacja.html</guid>
        </item>
                <item>
            <title>Powtórka z rozrywki</title>
            <dc:creator>Maciej Lew</dc:creator>
                                    <category>DSP2017</category>
                        <category>C++</category>
                        <category>DDS</category>
                                    <content:encoded>&lt;p&gt;Równo rok temu informowałem Was o moim udziale w konkursie &quot;Daj się 
poznać&quot;.
Dziś startuje kolejna edycja tego programistycznego wydarzenia. Z czym tym 
razem
będzie dane mi się zmierzyć?&lt;/p&gt;

&lt;h3 id=&quot;drug-dose-server&quot;&gt;Drug Dose Server&lt;/h3&gt;

&lt;p&gt;Pamiętacie poprzednią &lt;a href=&quot;/2016/05/30/raport-3-z-prac-nad-ddf.html&quot;&gt;moją aplikację konkursową DDF&lt;/a&gt;? Udało mi się 
rok temu w ciągu trzech miesięcy poznać wytwarzanie hybrydowych aplikacji 
mobilnych na tyle by być w stanie przedstawić Wam &lt;strong&gt;działającą aplikację 
do obliczania dawek leków&lt;/strong&gt;. Aplikacja działała zgodnie z założeniami, 
czyli że dane wejściowe dla kalkulatora dawek pobierane są z lokalnie 
przechowywanych plików.&lt;/p&gt;

&lt;p&gt;Podczas tej edycji &lt;a href=&quot;http://uczestnicy.dajsiepoznac.pl/profil/maciej-lew&quot;&gt;&quot;Daj się poznać&quot;&lt;/a&gt; mam zamian rozwinąć ten pomysł i 
napisać serwer dostarczający informacji o lekach dla aplikacji takich jak 
DDF. &lt;strong&gt;Nazwa projektu to Drug Dose Server&lt;/strong&gt;, będę dalej w odniesieniu do 
niego używał akronimu DDS (fajnie jest móc tworzyć swoje własne akronimy, 
co nie?).&lt;/p&gt;

&lt;h4 id=&quot;bebechy&quot;&gt;Bebechy&lt;/h4&gt;

&lt;p&gt;Aplikację DDS zamierzam napisać w C++. Rozważałem co prawda node.js lub 
inną zdobywającą obecnie popularność technologię, ale tak się mi 
przytrafiło że aktualnie i tak muszę sobie odświeżyć wiedzę z zakresu 
C++ - upiekę dwie pieczenie na jednym ogniu.&lt;/p&gt;

&lt;p&gt;Protokołem komunikacyjnym DDS będzie REST. Nie wiem jeszcze czy wszystko 
napiszę od zera czy skorzystam z gotowych bibliotek. Tego dowiecie się wraz 
ze mną podczas konkursu.&lt;/p&gt;

&lt;h4 id=&quot;piaskownica&quot;&gt;Piaskownica&lt;/h4&gt;

&lt;p&gt;Projekt możecie śledzić przeglądając tego bloga, a zwłaszcza &lt;a href=&quot;blog/tags/#DSP2017&quot;&gt;kategorię 
DSP2017&lt;/a&gt;. Źródła aplikacji będą dostępne na &lt;a href=&quot;https://github.com/maciejlew/drug-dose-server&quot;&gt;GitHubie&lt;/a&gt;. Trzymajcie 
kciuki.&lt;/p&gt;
</content:encoded>
            <pubDate>2017-03-01T20:00:00+01:00</pubDate>
            <link>http://lion.net.pl/2017/03/01/powtorka-z-rozrywki.html</link>
            <atom:link href="http://lion.net.pl/2017/03/01/powtorka-z-rozrywki.html" rel="self" type="application/rss+xml" />
            <guid isPermaLink="true">http://lion.net.pl/2017/03/01/powtorka-z-rozrywki.html</guid>
        </item>
                <item>
            <title>Dokumenty w LAN Management System</title>
            <dc:creator>Maciej Lew</dc:creator>
                                    <category>LMS</category>
                                    <content:encoded>&lt;p&gt;System zarządzania przedsiębiorstwem, jakim jest LAN Management System, 
powinien być wyposażony w moduł zarządzania dokumentami. LMS posiada taki moduł i 
daje jego użytkownikom sporą swobodę w tworzeniu dokumentów wszelakiej treści.
Jeśli jeszcze nie wykorzystujesz w swojej firmie możliwości LMS w ww. zakresie, 
a chcesz poszerzyć krąg czerpanych z LMS korzyści, zapoznaj się z tym tematem 
czytając ten wpis!&lt;/p&gt;

&lt;h3 id=&quot;dokumenty-w-lms&quot;&gt;Dokumenty w LMS&lt;/h3&gt;

&lt;p&gt;Dokumenty w LMS są tworzonymi z szablonu plikami, w których możesz 
zamieścić skierowaną do konkretnego klienta spersonalizowaną treść. 
Możliwe jest przygotowanie dokumentu dowolnego typu. Dokument ten jest 
przechowywany w formacie HTML, jego treść jest statyczna, to znaczy że nie 
zmieni się gdy zmianie ulegną dane pobrane z baz danych celu jego 
wygenerowania.&lt;/p&gt;

&lt;h3 id=&quot;jakie-funkcje-zwi%C4%85zane-z-obiegiem-dokument%C3%B3w-w-firmie-posiada-lms%3F&quot;&gt;Jakie funkcje związane z obiegiem dokumentów w firmie posiada LMS?&lt;/h3&gt;

&lt;p&gt;W LMS zostało zaimplementowanych szereg funkcji znanych z systemów obiegu 
dokumentów.
Są to między innymi:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;lista wszystkich dokumentów;&lt;/li&gt;
&lt;li&gt;lista dokumentów danego klienta;&lt;/li&gt;
&lt;li&gt;wyszukiwanie dokumentów;&lt;/li&gt;
&lt;li&gt;konfigurator uprawnień użytkowników w module dokumentów;&lt;/li&gt;
&lt;li&gt;plany numeracyjne;&lt;/li&gt;
&lt;li&gt;generator dokumentów;&lt;/li&gt;
&lt;li&gt;dostęp do dokumentów w panelu abonenta/klienta;&lt;/li&gt;
&lt;li&gt;szablony dokumentów.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Wykorzystując potencjał modułu zarządzania dokumentami w LMS, &lt;strong&gt;można 
znacząco zmniejszyć nakład czasu&lt;/strong&gt; jaki jest potrzebny w żmudnej, codziennej, 
papierkowej pracy biura obsługi klienta.&lt;/p&gt;

&lt;h4 id=&quot;lista-wystawionych-dokument%C3%B3w&quot;&gt;Lista wystawionych dokumentów&lt;/h4&gt;

&lt;p&gt;Moduł listy wystawionych dokumentów agreguje w jednym miejscu wystawione przy 
pomocy LMS dokumenty. Możesz w szybki sposób przejrzeć ostatnio wygenerowane 
pisma lub użyć wyszukiwarki aby zobaczyć pisma wybranego typu, wystawione w 
interesującym Cię okresie, sprawdzić które z nich nie zostały jeszcze
zatwierdzone.&lt;/p&gt;

&lt;p&gt;Warto wspomnieć, że LMS posiada wbudowaną listę typów pism. Dzięki temu 
szybko, bez zagłębiania się w treść dokumentu, będziesz w stanie 
określić czego on dotyczy. Na liście wbudowanych typów dokumentów 
znajdziesz m. in.:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;umowy;&lt;/li&gt;
&lt;li&gt;aneksy;&lt;/li&gt;
&lt;li&gt;protokoły;&lt;/li&gt;
&lt;li&gt;zamówienia;&lt;/li&gt;
&lt;li&gt;karty klienta;&lt;/li&gt;
&lt;li&gt;wzory rozwiązania umowy;&lt;/li&gt;
&lt;li&gt;wezwania do zapłaty;&lt;/li&gt;
&lt;li&gt;cenniki;&lt;/li&gt;
&lt;li&gt;promocje;&lt;/li&gt;
&lt;li&gt;gwarancje;&lt;/li&gt;
&lt;li&gt;regulaminy.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;lista-dokument%C3%B3w-klienta&quot;&gt;Lista dokumentów klienta&lt;/h4&gt;

&lt;p&gt;Lista dokumentów klienta widoczna jest w panelu informacji o kliencie i 
zawęża listę wszystkich dokumentów do tych przypisanych wybranemu klientowi 
(dokument musi mieć przypisanego klienta/abonenta i nie może ich mieć 
przypisanych więcej niż jednego). Na tej liście także znajdziemy takie 
informacje jak typ dokumentu, okres obowiązywania, dane użytkownika który go 
wystawił).&lt;/p&gt;

&lt;h4 id=&quot;konfigurator-uprawnie%C5%84&quot;&gt;Konfigurator uprawnień&lt;/h4&gt;

&lt;p&gt;LMS pozwala na konfigurowanie uprawnień użytkowników w zakresie wystawiania 
dokumentów. Możliwe jest określenie szczegółowych uprawnień do podglądu, 
tworzenia, zatwierdzania, edycji oraz usuwania każdego z wbudowanych typów 
dokumentów. Dzięki temu możemy odzwierciedlić w systemie rzeczywiste 
uprawnienia jego użytkowników, wprowadzić większą kontrolę przepływu 
dokumentów i uniknąć pomyłek.&lt;/p&gt;

&lt;h4 id=&quot;plany-numeracyjne&quot;&gt;Plany numeracyjne&lt;/h4&gt;

&lt;p&gt;Plany numeracyjne pozwalają nadać konkretnym typom dokumentów 
wyróżniającego je schematu numeracji. Przemyślany schemat numeracji ułatwi 
Ci pracę w module zarządzania dokumentami, kontakt z klientem w razie 
konieczności powoływana się na zapisy w dokumentach, itd.&lt;/p&gt;

&lt;p&gt;Moduł dodawania dokumentów pozwala na określenie planu numeracyjnego z 
którego zostanie pobrany kolejny numer do aktualnie tworzonego pisma lub dla 
którego wskazany zostanie przez wystawcę konkretny numer.&lt;/p&gt;

&lt;h4 id=&quot;generator-dokument%C3%B3w&quot;&gt;Generator dokumentów&lt;/h4&gt;

&lt;p&gt;Generator pozwala na szybkie wystawienia dokumentów tego samego typu, z tego 
samego szablonu, wszystkim klientom lub określonej ich grupie. Możesz w ten 
sposób wygenerować nową wersję regulaminu dla wszystkich podłączonych 
klientów, wystawić wszystkim dłużnikom wezwanie do zapłaty, itp.&lt;/p&gt;

&lt;h4 id=&quot;podgl%C4%85d-w-panelu-abonenta&quot;&gt;Podgląd w panelu abonenta&lt;/h4&gt;

&lt;p&gt;Informacja o każdym wystawionym dla abonenta/klienta dokumencie będzie dla 
niego dostępna po zalogowaniu się do panelu abonenta. Gdy zatwierdzisz dany 
dokument Twój klient będzie go mógł pobrać i wydrukować.&lt;/p&gt;

&lt;h4 id=&quot;szablony-dokument%C3%B3w&quot;&gt;Szablony dokumentów&lt;/h4&gt;

&lt;p&gt;Wraz z pobraną instancją LMS otrzymuje się przykładowy domyślny szablon. 
Na jego podstawie możesz przygotować inny potrzebny Tobie szablon umowy, 
cennika, regulaminu lub czegokolwiek innego co będzie przydatne w codziennej 
pracy Twojego przedsiębiorstwa. Szablony przygotowuje się w formacie HTML, a 
miejsca na dynamicznie wstawiane elementy tworzy się przy pomocy systemu 
szablonów dla PHP jakim jest Smarty. Silnik szablonu napisany jest w PHP, 
może być dostosowany do potrzeb konkretnego typu dokumentu. &lt;strong&gt;Pozwala on na 
łatwe pobranie z bazy danych niezbędnych do automatycznego wypełnienia 
szablonu danych o kliencie, jego zobowiązaniach, komputerach, saldzie oraz 
innych danych.&lt;/strong&gt; Możliwe jest także rozbudowanie formatki dodawania nowego 
dokumentu o dodatkowe pola przy pomocy skojarzonego z szablonami dokumentów 
systemu pluginów. W ten sposób podczas tworzenia nowego dokumentu możesz 
podać dodatkowe dane które nie znajdują się w bazie danych lub stworzyć 
kilka ścieżek tworzenia dokumentu.&lt;/p&gt;
</content:encoded>
            <pubDate>2017-02-13T20:00:00+01:00</pubDate>
            <link>http://lion.net.pl/2017/02/13/dokumenty_w_lan_management_system.html</link>
            <atom:link href="http://lion.net.pl/2017/02/13/dokumenty_w_lan_management_system.html" rel="self" type="application/rss+xml" />
            <guid isPermaLink="true">http://lion.net.pl/2017/02/13/dokumenty_w_lan_management_system.html</guid>
        </item>
                <item>
            <title>SpreadIT 2016 - relacja</title>
            <dc:creator>Maciej Lew</dc:creator>
                                    <category>OOP, QA, SpreadIT, MEETING</category>
                                    <content:encoded>&lt;p&gt;Czwarta edycja SpreadIT przeszła już do historii. Zapraszam do zapoznania się
z krótką relacją z której dowiecie się co w światku IT piszczy.&lt;/p&gt;

&lt;h2 id=&quot;tematyka-konferencji&quot;&gt;Tematyka konferencji&lt;/h2&gt;

&lt;p&gt;SpreadIT oferuje uczestnikom rozbudowane ścieżki tematyczne:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Inżynieria &lt;strong&gt;oprogramowania&lt;/strong&gt;;&lt;/li&gt;
&lt;li&gt;Tworzenie gier &lt;strong&gt;komputerowych&lt;/strong&gt;;&lt;/li&gt;
&lt;li&gt;Biznes i &lt;strong&gt;rozwój&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ja, jak zwykle, najbardziej zainteresowany byłem pierwszą z nich, z tego powodu
relacja ta będzie dotyczyła następujących wykładów:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Are you familiar with Test Doubles Patterns?&lt;/li&gt;
&lt;li&gt;P&amp;amp;A + DDD + CQRS = OO&lt;/li&gt;
&lt;li&gt;Wprowadzenie do Actor Model&lt;/li&gt;
&lt;li&gt;Jak uniknąć buzz word driven development i jak rozpoznać koncepcje, które 
pozostaną z nami na lata?&lt;/li&gt;
&lt;li&gt;Jak wróżyć z fusów skoro najczęściej pijemy kawę z ekspresu?&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;are-you-familiar-with-test-doubles-patterns%3F&quot;&gt;Are you familiar with Test Doubles Patterns?&lt;/h2&gt;

&lt;p&gt;Pierwszy z wykładów na ścieżce &lt;em&gt;&quot;Inżynieria oprogramowania&quot;&lt;/em&gt;, przygotował dla nas
Sebastian Malaca. Dotyczył on tych wszystkich rodzajów obiektów wykorzystywanych
podczas tworzenia testów by symulować działanie ich rzeczywistych odpowiedników, 
by działać w separacji, które na co dzień przez wielu ludzi nazywane są po prostu 
mockami. Dowiedzieliśmy się więc jaka jest różnica pomiędzy obiektami &lt;strong&gt;dummy, 
fake, spy, mock&lt;/strong&gt;. Jakie jest ich przeznaczenie, dlaczego i kiedy należy z nich 
korzystać, oraz dlaczego nadużywanie mocków może prowadzić od bałaganu w kodzie. 
Po tej prezentacji można było odkryć, że &lt;em&gt;double patterns&lt;/em&gt; to nie proste zaślepki,
a rozbudowany zestaw narzędzi, które należy używać z głową.&lt;/p&gt;

&lt;h2 id=&quot;p%26a-%2B-ddd-%2B-cqrs-%3D-oo&quot;&gt;P&amp;amp;A + DDD + CQRS = OO&lt;/h2&gt;

&lt;p&gt;Kolejny wykład to przygotowane przez Łukasza Szydło wprowadzenie do CQRS. Autor 
przedstawił bardzo fajne porównanie obiektu do komórki żywego organizmu. Rozłożył
także na czynniki pierwsze strukturę klasy w kontekście CQRS. Dzięki temu łatwiej
można było poczuć różnicę pomiędzy metodami &quot;command&quot; a metodami &quot;query&quot; i zrozumieć
CQS. Posługując się prostym rysunkiem, pokazującym gdzie w większości systemów jakiego
typy żądania są przesyłane, autor pokazał nam gdzie jest granica pomiędzy
częścią systemu odpowiedzialną za odczyt, a gdzie &quot;siedzi&quot; cała skomplikowana 
logika biznesowa systemu. Wymienione zostały zalety wprowadzenia CQRS w projekcie, 
czyli uproszczenie kodu, możliwość cachowania, łatwiejsze podążanie za zasadą 
&lt;em&gt;&lt;a href=&quot;https://pl.wikipedia.org/wiki/Zasada_jednej_odpowiedzialno%C5%9Bci&quot;&gt;&quot;single responsibility principle&quot;&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;

&lt;h2 id=&quot;wprowadzenie-do-actor-model&quot;&gt;Wprowadzenie do Actor Model&lt;/h2&gt;

&lt;p&gt;Wprowadzenie do actor model okazało się jednak czymś więcej niż wprowadzeniem.
Muszę przyznać że prezentacja była dobrze przygotowana, ale dla kogoś kto już ma
jakieś pojęcie czym jest &lt;em&gt;actor model&lt;/em&gt; i do czego go można wykorzystać lub właśnie
się do tego przygotowuje. Dla osób które dopiero chcą sprawdzić czym to się je,
prezentacja mogła być niezrozumiała. Łukasz Szymik przedstawił jak wprowadzenie
AM w projekcie pomogło przyspieszyć działanie aplikacji bez martwienia się o
typowe bolączki oprogramowania działającego współbieżnie. Cała prezentacja była
prowadzona w kontekście programowania w języku Scala, ale pojawiła się ciekawa
wzmianka o implementacji actor model w JS, którą postaram się niebawem zgłębić i 
coś o tym napisać na blogu.&lt;/p&gt;

&lt;h2 id=&quot;jak-unikn%C4%85%C4%87-buzz-word-driven-development-i-jak-rozpozna%C4%87-koncepcje%2C-kt%C3%B3re-pozostan%C4%85-z-nami-na-lata%3F&quot;&gt;Jak uniknąć buzz word driven development i jak rozpoznać koncepcje, które pozostaną z nami na lata?&lt;/h2&gt;

&lt;p&gt;Po tytule prezentacji można by się spodziewać że zostanie nam przedstawiony
przegląd metodologii/języków/technologii/frameworków. I tak właśnie rozpoczął się
ten wykład. Witold Adamus, posiłkując się wykresami z Google Trends, przedstawił
nam jak kształtowały się trendy w wyszukiwaniu haseł takich jak DDD, CQRS, OOP, 
Ruby, jQuery, pojęć związanych z programowaniem funkcyjnym i obiektowym. Poruszony 
został problem BWDD w projektach oraz CVDD. No i na tym skończyło się wyliczanie 
&lt;em&gt;buzz words&lt;/em&gt;, a zaczęła się ewangelizacja na temat programowania funkcyjnego. Był 
to wstęp do programowania funkcyjnego, przegląd monad, przykłady w PHP, promocja 
biblioteki &lt;a href=&quot;https://github.com/php-slang/php-slang&quot;&gt;php-slang&lt;/a&gt;. Dodatkowo autor podjął wyzwanie rozwiązania każdego 
problemu przy pomocy programowania funkcyjnego, więc jeśli taki macie to możecie 
pisać do niego e-mail.&lt;/p&gt;

&lt;h2 id=&quot;jak-wr%C3%B3%C5%BCy%C4%87-z-fus%C3%B3w-skoro-najcz%C4%99%C5%9Bciej-pijemy-kaw%C4%99-z-ekspresu%3F&quot;&gt;Jak wróżyć z fusów skoro najczęściej pijemy kawę z ekspresu?&lt;/h2&gt;

&lt;p&gt;Ostatnia prelekcja dotyczyła szacowania czasu. Marek Gajda nie ukrywał jakie to
trudne i niewdzięczne zadanie. Podał nam także kilka wskazówek jak podejść do 
tematu w sposób profesjonalny. Dowiedzieliśmy się jak ważny może być wywiad ze
zleceniodawcą, aby dowiedzieć się czego on tak właściwie chce. Zaproponowana
została znana w IT zasada &lt;em&gt;&quot;divide and conquer&quot;&lt;/em&gt;, czyli w tym przypadku podziału
zadania na mniejsze, być może znane już klocki i oszacowanie czasu wykonania
dla każdego z nich z osobna. Pokazano także jak należy szacować gdy do zlecenia
przydzielona ma zostać większa ilość osób, jak wliczać w rachunek czas na testy,
refaktoryzację oraz inne &lt;em&gt;&quot;detale&quot;&lt;/em&gt; które czasami nam umykają.&lt;/p&gt;

&lt;p&gt;A już za rok 5 edycja największej darmowej konferencji IT na Śląsku. Ma być 
jeszcze lepiej. Do zobaczenia na miejscu bo ja na pewno tego nie przegapię!&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Zobacz także:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;{{site.url}}/2017/11/19/spreadit-2017-relacja.html&quot;&gt;SpreadIT 2017 - relacja&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;{{site.url}}/2015/11/22/spreadit-2015-relacja.html&quot;&gt;SpreadIT 2015 - relacja&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content:encoded>
            <pubDate>2016-11-20T20:15:00+01:00</pubDate>
            <link>http://lion.net.pl/2016/11/20/spreadit-2016-relacja.html</link>
            <atom:link href="http://lion.net.pl/2016/11/20/spreadit-2016-relacja.html" rel="self" type="application/rss+xml" />
            <guid isPermaLink="true">http://lion.net.pl/2016/11/20/spreadit-2016-relacja.html</guid>
        </item>
                <item>
            <title>Zbliża się SpreadIT 2016!</title>
            <dc:creator>Maciej Lew</dc:creator>
                                    <category>OOP, QA, SpreadIT, MEETING</category>
                                    <content:encoded>&lt;p&gt;Już za tydzień kolejna edycja popularnej na Śląsku konferencji SpreadIT. Spotykamy 
się, tak jak zwykle, na wydziale AEiI Politechniki Śląskiej w Gliwicach.&lt;/p&gt;

&lt;p&gt;Podobnie jak rok temu organizatorzy przygotowali trzy ścieżki tematyczne:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Inżynieria &lt;strong&gt;oprogramowania&lt;/strong&gt;;&lt;/li&gt;
&lt;li&gt;Tworzenie gier &lt;strong&gt;komputerowych&lt;/strong&gt;;&lt;/li&gt;
&lt;li&gt;Biznes i &lt;strong&gt;rozwój&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;W trakcie spotkania zaplanowanych jest ponad 20 wykładów, a także panel dyskusyjny 
oraz przerwy na pogadanki.&lt;/p&gt;

&lt;p&gt;Zapisy są już zamknięte - mam nadzieję, że zdążyłeś się w porę zarejestrować.
W tym roku konferencji towarzyszy zbiórka na cel charytatywny. Darczyńcy mogą
odebrać bardzo fajną koszulkę związaną z tym wydarzeniem. Polecam.&lt;/p&gt;

&lt;p&gt;Więcej informacji znajdziecie &lt;a href=&quot;http://spreadit.pl/&quot;&gt;na stronie wydarzenia&lt;/a&gt;. Do zobaczenia na miejscu.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Zobacz także:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;{{site.url}}/2015/11/22/spreadit-2015-relacja.html&quot;&gt;SpreadIT 2015 - relacja&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;{{site.url}}/2016/11/20/spreadit-2016-relacja.html&quot;&gt;SpreadIT 2016 - relacja&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content:encoded>
            <pubDate>2016-11-13T13:00:00+01:00</pubDate>
            <link>http://lion.net.pl/2016/11/13/zbliza-sie-spreadit-2016.html</link>
            <atom:link href="http://lion.net.pl/2016/11/13/zbliza-sie-spreadit-2016.html" rel="self" type="application/rss+xml" />
            <guid isPermaLink="true">http://lion.net.pl/2016/11/13/zbliza-sie-spreadit-2016.html</guid>
        </item>
                <item>
            <title>Jak zrobić zrzut ekranu całej strony internetowej?</title>
            <dc:creator>Maciej Lew</dc:creator>
                                    <category>WWW</category>
                                    <content:encoded>&lt;p&gt;Czasami chcemy zrobić szybko zrzut ekranu całej strony internetowej. Nie kawałka
strony widocznego aktualnie na ekranie monitora, tylko całej jej zawartości. Jak
zrobić to szybko i przy pomocy znanych narzędzi?&lt;/p&gt;

&lt;h3 id=&quot;chytre-narz%C4%99dzie&quot;&gt;Chytre narzędzie&lt;/h3&gt;

&lt;p&gt;Przeglądarkę stron WWW Mozilla FireFox zna chyba każdy. To świetne narzędzie do 
przeglądania ma w sobie wbudowaną funkcjonalność robienia &lt;em&gt;&quot;screenów&quot;&lt;/em&gt; całej 
strony. Aby wykonać zrzut ekranu należy:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Wejść do narzędzi dla programistów klikając w ikonę menu, &lt;em&gt;&quot;Otwórz menu&quot;&lt;/em&gt;, (trzy 
poziome belki na pasku narzędzi przeglądarki) bądź naciskając klawisz F12 (o ile 
nie mamy go zarezerwowanego pod inną funkcjonalność, np. FireBuga).&lt;/li&gt;
&lt;li&gt;Kliknąć w ikonę aparatu fotograficznego, &lt;em&gt;&quot;Zrzut ekranu całej strony&quot;&lt;/em&gt;,
znajdującą się na pasku narzędzi dla programistów.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Jeśli nie możesz znaleźć na pasku narzędzi dla programistów ww. ikony aparatu 
fotograficznego oznacza to najprawdopodobniej że masz ją ukrytą. Aby to sprawdzić
należy wybrać znajdującą się na tym samym pasku ikonę koła zębatego, &lt;em&gt;&quot;Ustawienia
narzędzi&quot;&lt;/em&gt; i upewnić się że w sekcji &lt;em&gt;&quot;Przyciski narzędzi dla programistów&quot;&lt;/em&gt; 
zaznaczona jest opcja &lt;em&gt;&quot;Zrzut ekranu całej strony&quot;&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Po kliknięciu w ikonę aparatu zrzut od razu powinien zapisać się w domyślnym 
katalogu do którego FireFox zapisuje pobrane pliki.&lt;/p&gt;

&lt;p&gt;Opisane rozwiązanie jest bardzo wygodne, przeglądarka FF działa zarówno na systemach
Windows, jak i Linuks. Ponad to nie wymaga ono instalowania dodatkowych narzędzi
gdy działamy na systemie już wyposażonym w FF, co może być kluczowe gdy nie mamy
odpowiednich uprawnień by instalować dodatkowe oprogramowanie na danym systemie.&lt;/p&gt;
</content:encoded>
            <pubDate>2016-09-02T19:20:00+02:00</pubDate>
            <link>http://lion.net.pl/2016/09/02/jak-zrobic-zrzut-ekranu-calej-strony-internetowej.html</link>
            <atom:link href="http://lion.net.pl/2016/09/02/jak-zrobic-zrzut-ekranu-calej-strony-internetowej.html" rel="self" type="application/rss+xml" />
            <guid isPermaLink="true">http://lion.net.pl/2016/09/02/jak-zrobic-zrzut-ekranu-calej-strony-internetowej.html</guid>
        </item>
                <item>
            <title>Recenzja &#039;JavaScript. Programowanie obiektowe&#039;</title>
            <dc:creator>Maciej Lew</dc:creator>
                                    <category>JS</category>
                        <category>OOP</category>
                        <category>QA</category>
                                    <content:encoded>&lt;p&gt;W tym wpisie chciałbym przedstawić Ci moją opinię o najlepszej książce na temat
JavaScriptu jaką miałem przyjemność przeczytać, czyli o &lt;em&gt;&quot;JavaScript. Programowanie
obiektowe&quot;&lt;/em&gt; napisanej przez &lt;a href=&quot;http://www.phpied.com/&quot;&gt;Stoyana Stefanova&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;javascript-trudny-j%C4%99zyk-jest&quot;&gt;JavaScript trudny język jest&lt;/h3&gt;

&lt;p&gt;JavaScript istnieje już ponad 20 lat. Powstał po to by dodać trochę interakcji
na stronach WWW końca lat 90. Jak każda technologia, tak samo i JS ewoluował.
Początki były trudne, przypominające epokę kamienia łupanego. Ktoś tam coś wymyślił,
jakieś nowe zastosowanie dla JS, a następnie rozlewało się to po całym Internecie,
atakując Nas na niemal każdej odwiedzanej stronie. Gotowe &quot;wstawki&quot; kopiowane były
przez osoby zupełnie nie rozumiejące co kopiują i jak to działa, byle osiągnąć
zamierzony bajerancki efekt na stronie. Nikt raczej nie uczył się JS. Niby w 
książkach o HTML można czasem było znaleźć 2-3 słowa na jego temat, ale głównie 
dlatego że konkurencyjne publikacje wprowadziły taki trend, a nie dlatego że sam
autor chciał się bardzo w ten temat zagłębiać.&lt;/p&gt;

&lt;p&gt;Powstawały kolejne biblioteki i frameworki JS. Dochodziło do takich kuriozum, że
programista chwalący się znajomością JS, aby pobrać jeden głupi element ze strony 
po jego id musiał ładować całą kilkuset-bajtową bibliotekę jQuery...&lt;/p&gt;

&lt;p&gt;Na szczęście te czasy powoli mijają, programiści (i firmy ich zatrudniające) chcą
być bardziej profesjonalni i wiedzieć więcej. Powstają nawet takie specjalizacje
jak &quot;Frontend  Developer&quot;. Coraz więcej osób chce wiedzieć co programuje w JS i 
jak to w rzeczywistości działa. Chcą korzystać z doświadczenia innych, sami szukają
najlepszych praktyk. Jeśli i Ty jesteś taką osobą to książka &lt;em&gt;&quot;JavaScript. 
Programowanie obiektowe&quot;&lt;/em&gt; powinna Cię zainteresować.&lt;/p&gt;

&lt;h3 id=&quot;dla-kogo-jest-ta-ksi%C4%85%C5%BCka%3F&quot;&gt;Dla kogo jest ta książka?&lt;/h3&gt;

&lt;h4 id=&quot;pocz%C4%85tkuj%C4%85cy-programi%C5%9Bci&quot;&gt;Początkujący programiści&lt;/h4&gt;

&lt;p&gt;Początkujący programiści webowi w książce Stefanova znajdą na prawdę fajne, 
obszerne wprowadzenie do tego języka. Stoyan opisuje po kolei każdy z podstawowych
typów dostępnych w JS, przedstawia nam zastosowanie dla wielu wbudowanych funkcji
oraz wprowadza w obiektowość zaimplementowaną w JS.&lt;/p&gt;

&lt;p&gt;Autor w książce pokazuje początkującym jak używać konsoli przeglądarki do szybkiego 
prototypowania i debugowania skryptów. Dowiesz się także co-nieco o środowisku
przeglądarki i zdarzeniach w JS.&lt;/p&gt;

&lt;p&gt;Jeśli zaczynasz przygodę z JS, a lubisz poczytać na papierze i mieć wszystko 
opisane zwięźle i w jednym miejscu, to bierz tą książkę w ciemno.&lt;/p&gt;

&lt;h4 id=&quot;zaawansowani-odbiorcy&quot;&gt;Zaawansowani odbiorcy&lt;/h4&gt;

&lt;p&gt;Mniej więcej połowa książki to podstawy. Oznacza to że druga połowa to już wyższy
poziom wtajemniczenia, wymagający trochę więcej czasu na przetrawienie. Warto 
jednak poświęcić ten czas i nawet przeczytać te kolejne rozdziały po kilka razy 
aż zajarzysz o co chodzi. Autor książki wprowadzi Cię w temat pisania własnych
obiektowych aplikacji w JS. Poznasz 12 wzorców implementacji dziedziczenia w JS!
Jeśli po przeczytaniu poprzedniego zdania oczy otworzyły Ci się szerzej bądź 
opadła Ci szczęka, to nie dziwię się. Także byłem pod wrażeniem. Zrozumienie
przykładów zaproponowanych w książce wymaga wytężenia umysły, zwłaszcza gdy już
jesteś przyzwyczajony do innego rozumienia dziedziczenia, wyniesionego z nauki 
innego języka programowania. Ale gdy już zrozumiesz będziesz mógł być z siebie 
dumny.&lt;/p&gt;

&lt;h3 id=&quot;czego-nie-znajdziesz-w-%22javascript.-programowanie-obiektowe%22&quot;&gt;Czego nie znajdziesz w &quot;JavaScript. Programowanie obiektowe&quot;&lt;/h3&gt;

&lt;p&gt;Recenzowana książka na pewno nie jest dla tych którzy szukają repozytorium gotowych
&quot;wstawek&quot; na stronę WWW. Nie znajdziesz tu także opisu żadnej biblioteki ani 
frameworka. To dobrze.&lt;/p&gt;

&lt;p&gt;W książce brakuje, moim zdaniem, opisu pewnych ogólnych wzorców projektowych JS.
Gdyby zostały one zamieszczone to śmiało mógłbym powiedzieć że do nauki JavaScript
nie potrzebujesz już niczego więcej.&lt;/p&gt;

&lt;p&gt;Publikacja nie zawiera także w sobie ani słowa o standardach pisania w JS oraz
testowaniu kodu JS - ale to być może już temat na inną książkę?&lt;/p&gt;

&lt;h3 id=&quot;kupowa%C4%87-czy-nie%3F&quot;&gt;Kupować czy nie?&lt;/h3&gt;

&lt;p&gt;Moim zdaniem, &lt;strong&gt;warto mieć w swojej programistycznej biblioteczce książkę &lt;em&gt;&quot;Javascript.
Programowanie obiektowe&quot;&lt;/em&gt;&lt;/strong&gt;, zwłaszcza gdy na co dzień zajmujesz się webdevem. 
Jak wiele książek z cyklu &lt;em&gt;&quot;Technologie i rozwiązania&quot;&lt;/em&gt; wydawnictwa Helion, 
książka Stoyana Stefanova prezentuje wysoki poziom oraz bez owijania w bawełnę 
uczy jak pisać dobre oprogramowanie.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Zobacz także:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/2016/04/05/typy-wyjatkow-w-javascript.html&quot;&gt;Typy wyjątków w JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2016/05/19/nie-uzywaj-string-number-boolean-jako-konstruktorow-w-javascript.html&quot;&gt;Nie używaj String&amp;#124;Numer&amp;#124;Boolean jako konstruktorów w JavaScript!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2016/03/24/walidacja-w-akcesorach-javascript.html&quot;&gt;Walidacja w akcesorach JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content:encoded>
            <pubDate>2016-08-07T19:20:00+02:00</pubDate>
            <link>http://lion.net.pl/2016/08/07/recenzja-javascript-programowanie-obiektowe.html</link>
            <atom:link href="http://lion.net.pl/2016/08/07/recenzja-javascript-programowanie-obiektowe.html" rel="self" type="application/rss+xml" />
            <guid isPermaLink="true">http://lion.net.pl/2016/08/07/recenzja-javascript-programowanie-obiektowe.html</guid>
        </item>
                <item>
            <title>Wpływ wstępnej filtracji na segmentację wododziałową</title>
            <dc:creator>Maciej Lew</dc:creator>
                                    <category>GKIRO</category>
                                    <content:encoded>&lt;p&gt;W trzecim, a zarazem ostatnim, wpisie z cyklu związanego z moimi badaniami wpływu
wstępnej filtracji obrazu na jego segmentację przedstawię wyniki jakie udało się
mi zaobserwować i płynące z nich wnioski.&lt;/p&gt;

&lt;h3 id=&quot;badanie-wp%C5%82ywu-wst%C4%99pnej-filtracji-obrazu-na-ilo%C5%9B%C4%87-segment%C3%B3w-po-segmentacji&quot;&gt;Badanie wpływu wstępnej filtracji obrazu na ilość segmentów po segmentacji&lt;/h3&gt;

&lt;p&gt;W części badawczej pracy postanowiono przeprowadzić analizę wpływu zastosowanych 
wstępnych filtrów na ilość segmentów na obrazie po segmentacji wododziałowej. 
Przebadano następujące filtry:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;erozja, parametrem jest ilość iteracji&lt;/li&gt;
&lt;li&gt;dylacja, parametrem jest ilość iteracji&lt;/li&gt;
&lt;li&gt;otwarcie, parametrem jest ilość iteracji erozji i dylacji, oraz rozmiar elementu strukturalnego&lt;/li&gt;
&lt;li&gt;zamknięcie, parametrem jest ilość iteracji erozji i dylacji, oraz rozmiar elementu strukturalnego&lt;/li&gt;
&lt;li&gt;otwarcie i zamknięcie, parametrem jest ilość iteracji erozji i dylacji, oraz rozmiar elementu strukturalnego&lt;/li&gt;
&lt;li&gt;filtr medianowy, parametrem jest rozmiar okna&lt;/li&gt;
&lt;li&gt;filtr rozmyty, parametrem jest próg podobieństwa&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ponadto powtórzono badania dla obrazu po zastosowaniu wyrównania histogramu.&lt;/p&gt;

&lt;p&gt;Badania przeprowadzono na &lt;a href=&quot;https://www.flickr.com/photos/bc_the_path/3234972460/&quot;&gt;obrazie RTG przedstawiającym dysplazję w postaci 
torbieli okołowierzchołkowej&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Badania rozpoczęto od wykonania segmentacji na obrazie nie poddawanym wcześniej 
żadnym filtracjom, rysunek 1. W tym przypadku na obrazie 
zliczono &lt;strong&gt;30919&lt;/strong&gt; segmentów. Sprawdzono także wpływ samego wyrównania histogramu 
na ilość segmentów, w wyniku otrzymano obraz z &lt;strong&gt;30196&lt;/strong&gt; segmentami.&lt;/p&gt;

&lt;figure&gt;
    &lt;img src=&quot;/assets/img/gkiro/badania/bez_filtracji.jpg&quot; 
        alt=&quot;Wynik segmentacji obrazu bez wstępnej filtracji&quot;&gt;
    &lt;figcaption&gt;
        Rysunek 1: Wynik segmentacji obrazu bez wstępnej filtracji
    &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h4 id=&quot;podstawowe-przekszta%C5%82cenia-morfologiczne---erozja-i-dylacja&quot;&gt;Podstawowe przekształcenia morfologiczne - erozja i dylacja&lt;/h4&gt;

&lt;p&gt;Badania postanowiono rozpocząć od sprawdzenia wpływu podstawowych filtrów 
morfologicznych - erozji i dylacji - na ilość segmentów w obrazie po segmentacji 
wododziałowej. Przyjęto kształt elementu strukturalnego jako kwadrat o boku 
równym 3, z punktem odniesienia ustawionym pośrodku. Jako parametr postanowiono 
przyjąć ilość wywołań filtru na obrazie wejściowym. Wyniki przedstawiono w 
tabelach 1, 2, 3, 4. Graficzną interpretację wyników pokazano na rysunku 2. Na 
wykresie można zauważyć, że zarówno w przypadku zastosowania erozji jak i dylacji, 
uzyskano ponad dwukrotne zmniejszenie ilości segmentów już przy pierwszej iteracji. 
Ilość segmentów spada wraz z kolejnymi iteracjami w podobnym tempie dla erozji i 
dylacji. Wyrównanie histogramu przynosi zawsze jedynie niewielki spadek ilości 
segmentów. Oba filtry, wraz z kolejnymi iteracjami powodują coraz większe zmiany 
w kształcie wyodrębnianych segmentów. Jest to zwłaszcza widoczne na granicy 
pomiędzy obserwowaną zmianą chorobową, której kolor jest ciemny, a korzeniem 
zęba przy którym zmiana się ta znajduje, który jest jasny. W przypadku dylacji 
jasne segmenty w obrębie korzenia poszerzają się nachodząc na obszar pierwotnie 
rozpoznawany jako lezja. Jest to spowodowane tym, że dylacja działa jak filtr 
maksymalny. W przypadku erozji obserwowany efekt jest odwrotny, segmenty mające 
reprezentować korzeń zostają zmniejszone, a w ich miejsce narastają segmenty 
reprezentujące lezje. Dzieje się tak ponieważ erozja działa jak filtr minimalny. 
Uzyskane wyniki badań wskazują, że w przypadku dylacji liczba segmentów jest 
mniejsza niż przy tej samej ilości iteracji dla erozji. Dzieje się tak, ponieważ 
w przypadku dylacji dochodzi do złączenia regionów o podobnych poziomach szarości, 
pomiędzy którymi występowały niewielkie regiony o odcieniach szarości mniejszych.&lt;/p&gt;

&lt;table&gt;
    &lt;caption&gt;
        Tabela 1: Erozja - ilość segmentów w zależności od ilości iteracji, bez 
        wyrównania histogramu
    &lt;/caption&gt;
    &lt;colgroup&gt;
        &lt;col style=&quot;width: 20%&quot;&gt;
        &lt;col style=&quot;width: 10%&quot;&gt;
    &lt;/colgroup&gt;
    &lt;thead&gt;
        &lt;tr&gt;
            &lt;th colspan=&quot;2&quot; rowspan=&quot;2&quot;&gt;&lt;/th&gt;
            &lt;th colspan=&quot;3&quot;&gt;Ilość iteracji&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;th&gt;1&lt;/th&gt;
            &lt;th&gt;2&lt;/th&gt;
            &lt;th&gt;3&lt;/th&gt;
        &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
        &lt;tr&gt;
            &lt;th rowspan=&quot;1&quot;&gt;Rozmiar elementu strukturalnego&lt;/th&gt;
            &lt;th&gt;3x3&lt;/th&gt;
            &lt;td&gt;11313&lt;/td&gt;
            &lt;td&gt;6294&lt;/td&gt;
            &lt;td&gt;4070&lt;/td&gt;
        &lt;/tr&gt;
    &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
    &lt;caption&gt;
        Tabela 2: Erozja - ilość segmentów w zależności od ilości iteracji, z 
        wyrównaniem histogramu
    &lt;/caption&gt;
    &lt;colgroup&gt;
        &lt;col style=&quot;width: 20%&quot;&gt;
        &lt;col style=&quot;width: 10%&quot;&gt;
    &lt;/colgroup&gt;
    &lt;thead&gt;
        &lt;tr&gt;
            &lt;td colspan=&quot;2&quot; rowspan=&quot;2&quot;&gt;&lt;/td&gt;
            &lt;th colspan=&quot;3&quot;&gt;Ilość iteracji&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;th&gt;1&lt;/th&gt;
            &lt;th&gt;2&lt;/th&gt;
            &lt;th&gt;3&lt;/th&gt;
        &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
        &lt;tr&gt;
            &lt;th rowspan=&quot;1&quot;&gt;Rozmiar elementu strukturalnego&lt;/th&gt;
            &lt;th&gt;3x3&lt;/th&gt;
            &lt;td&gt;10957&lt;/td&gt;
            &lt;td&gt;6042&lt;/td&gt;
            &lt;td&gt;3911&lt;/td&gt;
        &lt;/tr&gt;
    &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
    &lt;caption&gt;
        Tabela 3: Dylacja - ilość segmentów w zależności od ilości iteracji, bez 
        wyrównania histogramu
    &lt;/caption&gt;
    &lt;colgroup&gt;
        &lt;col style=&quot;width: 20%&quot;&gt;
        &lt;col style=&quot;width: 10%&quot;&gt;
    &lt;/colgroup&gt;
    &lt;thead&gt;
        &lt;tr&gt;
            &lt;td colspan=&quot;2&quot; rowspan=&quot;2&quot;&gt;&lt;/td&gt;
            &lt;th colspan=&quot;3&quot;&gt;Ilość iteracji&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;th&gt;1&lt;/th&gt;
            &lt;th&gt;2&lt;/th&gt;
            &lt;th&gt;3&lt;/th&gt;
        &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
        &lt;tr&gt;
            &lt;th rowspan=&quot;1&quot;&gt;Rozmiar elementu strukturalnego&lt;/th&gt;
            &lt;th&gt;3x3&lt;/th&gt;
            &lt;td&gt;13238&lt;/td&gt;
            &lt;td&gt;7900&lt;/td&gt;
            &lt;td&gt;5150&lt;/td&gt;
        &lt;/tr&gt;
    &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
    &lt;caption&gt;
        Tabela 4: Dylacja - ilość segmentów w zależności od ilości iteracji, z 
        wyrównaniem histogramu
    &lt;/caption&gt;
    &lt;colgroup&gt;
        &lt;col style=&quot;width: 20%&quot;&gt;
        &lt;col style=&quot;width: 10%&quot;&gt;
    &lt;/colgroup&gt;
    &lt;thead&gt;
        &lt;tr&gt;
            &lt;td colspan=&quot;2&quot; rowspan=&quot;2&quot;&gt;&lt;/td&gt;
            &lt;th colspan=&quot;3&quot;&gt;Ilość iteracji&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;th&gt;1&lt;/th&gt;
            &lt;th&gt;2&lt;/th&gt;
            &lt;th&gt;3&lt;/th&gt;
        &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
        &lt;tr&gt;
            &lt;th rowspan=&quot;1&quot;&gt;Rozmiar elementu strukturalnego&lt;/th&gt;
            &lt;th&gt;3x3&lt;/th&gt;
            &lt;td&gt;12827&lt;/td&gt;
            &lt;td&gt;7644&lt;/td&gt;
            &lt;td&gt;4929&lt;/td&gt;
        &lt;/tr&gt;
    &lt;/tbody&gt;
&lt;/table&gt;

&lt;figure&gt;
    &lt;img src=&quot;/assets/img/gkiro/badania/badania_podstawowe_filtry_morfologiczne.png&quot; 
        alt=&quot;Podstawowe przekształcenia morfologiczne - erozja i dylacja - zależność ilości segmentów od ilości iteracji&quot;&gt;
    &lt;figcaption&gt;
        Rysunek 2: Podstawowe przekształcenia morfologiczne - erozja i dylacja - 
        zależność ilości segmentów od ilości iteracji
    &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h4 id=&quot;z%C5%82o%C5%BCone-przekszta%C5%82cenia-morfologiczne---otwarcie-i-zamkni%C4%99cie&quot;&gt;Złożone przekształcenia morfologiczne - otwarcie i zamknięcie&lt;/h4&gt;

&lt;p&gt;Kolejnym krokiem po przebadaniu podstawowych filtrów morfologicznych była analiza 
skutków połączenia tych filtrów w bardziej złożone algorytmy. Przeprowadzono 
badania dla otwarcia, zamknięcia oraz połączenia tych filtrów.&lt;/p&gt;

&lt;table&gt;
    &lt;caption&gt;
        Tabela 5: Otwarcie - ilość segmentów w zależności od ilości iteracji i 
        rozmiaru elementu strukturalnego, bez wyrównania histogramu
    &lt;/caption&gt;
    &lt;colgroup&gt;
        &lt;col style=&quot;width: 20%&quot;&gt;
        &lt;col style=&quot;width: 10%&quot;&gt;
    &lt;/colgroup&gt;
    &lt;thead&gt;
        &lt;tr&gt;
            &lt;td colspan=&quot;2&quot; rowspan=&quot;2&quot;&gt;&lt;/td&gt;
            &lt;th colspan=&quot;3&quot;&gt;Ilość iteracji&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;th&gt;1&lt;/th&gt;
            &lt;th&gt;2&lt;/th&gt;
            &lt;th&gt;3&lt;/th&gt;
        &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
        &lt;tr&gt;
            &lt;th rowspan=&quot;2&quot;&gt;Rozmiar elementu strukturalnego&lt;/th&gt;
            &lt;th&gt;3x3&lt;/th&gt;
            &lt;td&gt;14569&lt;/td&gt;
            &lt;td&gt;8616&lt;/td&gt;
            &lt;td&gt;5693&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;th&gt;5x5&lt;/th&gt;
            &lt;td&gt;8616&lt;/td&gt;
            &lt;td&gt;4025&lt;/td&gt;
            &lt;td&gt;2380&lt;/td&gt;
        &lt;/tr&gt;
    &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
    &lt;caption&gt;
        Tabela 6: Otwarcie - ilość segmentów w zależności od ilości iteracji i 
        rozmiaru elementu strukturalnego, z wyrównaniem histogramu
    &lt;/caption&gt;
    &lt;colgroup&gt;
        &lt;col span=&quot;1&quot; style=&quot;width: 20%&quot;&gt;
    &lt;/colgroup&gt;
    &lt;thead&gt;
        &lt;tr&gt;
            &lt;td colspan=&quot;2&quot; rowspan=&quot;2&quot;&gt;&lt;/td&gt;
            &lt;th colspan=&quot;3&quot;&gt;Ilość iteracji&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;th&gt;1&lt;/th&gt;
            &lt;th&gt;2&lt;/th&gt;
            &lt;th&gt;3&lt;/th&gt;
        &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
        &lt;tr&gt;
            &lt;th rowspan=&quot;2&quot;&gt;Rozmiar elementu strukturalnego&lt;/th&gt;
            &lt;th&gt;3x3&lt;/th&gt;
            &lt;td&gt;14102&lt;/td&gt;
            &lt;td&gt;8310&lt;/td&gt;
            &lt;td&gt;5477&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;th&gt;5x5&lt;/th&gt;
            &lt;td&gt;8300&lt;/td&gt;
            &lt;td&gt;3843&lt;/td&gt;
            &lt;td&gt;2222&lt;/td&gt;
        &lt;/tr&gt;
    &lt;/tbody&gt;
&lt;/table&gt;

&lt;figure&gt;
    &lt;img src=&quot;/assets/img/gkiro/badania/badania_otwarcie.png&quot; 
        alt=&quot;Złożone przekształcenia morfologiczne - otwarcie - zależność ilości segmentów od ilości iteracji&quot;&gt;
    &lt;figcaption&gt;
        Rysunek 3: Złożone przekształcenia morfologiczne - otwarcie - zależność 
        ilości segmentów od ilości iteracji
    &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;W tabelach 5 i 6 zawarto wartości ilości zliczonych segmentów po zastosowaniu 
operacji otwarcia morfologicznego. Na rysunku 3 pokazano te wyniki w postaci 
wykresu. Można zauważyć, że dla otwarcia z elementem strukturalnym o rozmiarze 
3x3, wyniki są porównywalne do wyników otrzymanych dla podstawowych filtrów 
morfologicznych, gdzie zastosowano element strukturalny o tym samym rozmiarze. 
Po zmianie rozmiaru elementu strukturalnego na 5x5, zauważono dwukrotny spadek 
ilości segmentów na obrazie wyjściowym. W przypadku otwarcia problem zmiany 
kształtu segmentów granicznych pomiędzy lezją a jej otoczeniem, nie jest tak 
duży jak w przypadku podstawowych filtrów morfologicznych, zwłaszcza dla elementu 
strukturalnego 3x3 i pierwszej iteracji elementem 5x5. Spowodowane jest to tym, 
że operacja otwarcie jest złożeniem operacji erozji i dylacji. Operacja otwarcia 
powoduje usunięcie niewielkich ciemniejszych obszarów z otoczenia większych 
jasnych obszarów.&lt;/p&gt;

&lt;table&gt;
    &lt;caption&gt;
        Tabela 7: Zamknięcie - ilość segmentów w zależności od ilości iteracji i 
        rozmiaru elementu strukturalnego, bez wyrównania histogramu
    &lt;/caption&gt;
    &lt;colgroup&gt;
        &lt;col style=&quot;width: 20%&quot;&gt;
        &lt;col style=&quot;width: 10%&quot;&gt;
    &lt;/colgroup&gt;
    &lt;thead&gt;
        &lt;tr&gt;
            &lt;td colspan=&quot;2&quot; rowspan=&quot;2&quot;&gt;&lt;/td&gt;
            &lt;th colspan=&quot;3&quot;&gt;Ilość iteracji&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;th&gt;1&lt;/th&gt;
            &lt;th&gt;2&lt;/th&gt;
            &lt;th&gt;3&lt;/th&gt;
        &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
        &lt;tr&gt;
            &lt;th rowspan=&quot;2&quot;&gt;Rozmiar elementu strukturalnego&lt;/th&gt;
            &lt;th&gt;3x3&lt;/th&gt;
            &lt;td&gt;10463&lt;/td&gt;
            &lt;td&gt;5892&lt;/td&gt;
            &lt;td&gt;3846&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;th&gt;5x5&lt;/th&gt;
            &lt;td&gt;5892&lt;/td&gt;
            &lt;td&gt;2698&lt;/td&gt;
            &lt;td&gt;1654&lt;/td&gt;
        &lt;/tr&gt;
    &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
    &lt;caption&gt;
        Tabela 8: Zamknięcie - ilość segmentów w zależności od ilości iteracji i 
        rozmiaru elementu strukturalnego, z wyrównaniem histogramu
    &lt;/caption&gt;
    &lt;colgroup&gt;
        &lt;col style=&quot;width: 20%&quot;&gt;
        &lt;col style=&quot;width: 10%&quot;&gt;
    &lt;/colgroup&gt;
    &lt;thead&gt;
        &lt;tr&gt;
            &lt;td colspan=&quot;2&quot; rowspan=&quot;2&quot;&gt;&lt;/td&gt;
            &lt;th colspan=&quot;3&quot;&gt;Ilość iteracji&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;th&gt;1&lt;/th&gt;
            &lt;th&gt;2&lt;/th&gt;
            &lt;th&gt;3&lt;/th&gt;
        &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
        &lt;tr&gt;
            &lt;th rowspan=&quot;2&quot;&gt;Rozmiar elementu strukturalnego&lt;/th&gt;
            &lt;th&gt;3x3&lt;/th&gt;
            &lt;td&gt;10105&lt;/td&gt;
            &lt;td&gt;5687&lt;/td&gt;
            &lt;td&gt;3729&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;th&gt;5x5&lt;/th&gt;
            &lt;td&gt;5715&lt;/td&gt;
            &lt;td&gt;2590&lt;/td&gt;
            &lt;td&gt;1578&lt;/td&gt;
        &lt;/tr&gt;
    &lt;/tbody&gt;
&lt;/table&gt;

&lt;figure&gt;
    &lt;img src=&quot;/assets/img/gkiro/badania/badania_zamkniecie.png&quot; 
        alt=&quot;Złożone przekształcenia morfologiczne - zamknięcie - zależność ilości segmentów od ilości iteracji&quot;&gt;
    &lt;figcaption&gt;
        Rysunek 4: Złożone przekształcenia morfologiczne - zamknięcie - zależność 
        ilości segmentów od ilości iteracji
    &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;W tabelach 7 i 8 zawarto wartości ilości zliczonych segmentów po zastosowaniu 
operacji zamknięcia morfologicznego. Na rysunku 4 pokazano te wyniki w postaci 
wykresu. Można zauważyć, że ilość segmentów jest mniejsza od ilości otrzymanej 
w wyniku zastosowania otwarcia. Również w tym przypadku problem zmiany kształtu 
segmentów granicznych został ograniczony. Spowodowane to jest także tym, że 
operacja zamknięcia jest złożeniem erozji i dylacji, jednak w odwrotnej 
kolejności wykonywania tych operacji składowych. Segmentów jest mniej ponieważ 
najpierw wykonywana jest dylacja, która sama daje już mniejszą ilość segmentów 
niż erozja, a następnie na obrazie pośrednim wykonywana jest erozja.&lt;/p&gt;

&lt;table&gt;
    &lt;caption&gt;
        Tabela 9: Otwarcie + zamknięcie - ilość segmentów w zależności od ilości 
        iteracji i rozmiaru elementu strukturalnego, bez wyrównania histogramu
    &lt;/caption&gt;
    &lt;colgroup&gt;
        &lt;col style=&quot;width: 20%&quot;&gt;
        &lt;col style=&quot;width: 10%&quot;&gt;
    &lt;/colgroup&gt;
    &lt;thead&gt;
        &lt;tr&gt;
            &lt;td colspan=&quot;2&quot; rowspan=&quot;2&quot;&gt;&lt;/td&gt;
            &lt;th colspan=&quot;3&quot;&gt;Ilość iteracji&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;th&gt;1&lt;/th&gt;
            &lt;th&gt;2&lt;/th&gt;
            &lt;th&gt;3&lt;/th&gt;
        &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
        &lt;tr&gt;
            &lt;th rowspan=&quot;2&quot;&gt;Rozmiar elementu strukturalnego&lt;/th&gt;
            &lt;th&gt;3x3&lt;/th&gt;
            &lt;td&gt;6542&lt;/td&gt;
            &lt;td&gt;3179&lt;/td&gt;
            &lt;td&gt;1879&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;th&gt;5x5&lt;/th&gt;
            &lt;td&gt;3179&lt;/td&gt;
            &lt;td&gt;1259&lt;/td&gt;
            &lt;td&gt;709&lt;/td&gt;
        &lt;/tr&gt;
    &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
    &lt;caption&gt;
        Tabela 10: Otwarcie + zamknięcie - ilość segmentów w zależności od ilości 
        iteracji i rozmiaru elementu strukturalnego, z wyrównaniem histogramu
    &lt;/caption&gt;
    &lt;colgroup&gt;
        &lt;col style=&quot;width: 20%&quot;&gt;
        &lt;col style=&quot;width: 10%&quot;&gt;
    &lt;/colgroup&gt;
    &lt;thead&gt;
        &lt;tr&gt;
            &lt;td colspan=&quot;2&quot; rowspan=&quot;2&quot;&gt;&lt;/td&gt;
            &lt;th colspan=&quot;3&quot;&gt;Ilość iteracji&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;th&gt;1&lt;/th&gt;
            &lt;th&gt;2&lt;/th&gt;
            &lt;th&gt;3&lt;/th&gt;
        &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
        &lt;tr&gt;
            &lt;th rowspan=&quot;2&quot;&gt;Rozmiar elementu strukturalnego&lt;/th&gt;
            &lt;th&gt;3x3&lt;/th&gt;
            &lt;td&gt;6350&lt;/td&gt;
            &lt;td&gt;3070&lt;/td&gt;
            &lt;td&gt;1813&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;th&gt;5x5&lt;/th&gt;
            &lt;td&gt;3070&lt;/td&gt;
            &lt;td&gt;1211&lt;/td&gt;
            &lt;td&gt;676&lt;/td&gt;
        &lt;/tr&gt;
    &lt;/tbody&gt;
&lt;/table&gt;

&lt;figure&gt;
    &lt;img src=&quot;/assets/img/gkiro/badania/badania_otwarcie_zamkniecie.png&quot; 
        alt=&quot;Złożone przekształcenia morfologiczne - otwarcie i zamknięcie - zależność ilości segmentów od ilości iteracji&quot;&gt;
    &lt;figcaption&gt;
        Rysunek 5: Złożone przekształcenia morfologiczne - otwarcie i zamknięcie 
        - zależność ilości segmentów od ilości iteracji
    &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Postanowiono także przetestować działanie złożenia operacji otwarcia i zamknięcia. 
Wyniki testów umieszczono w tabelach 9 i 10, a ich wizualizację pokazano na 
rysunku 5. Uzyskano jeszcze większe ograniczenie ilości segmentów. Zastosowanie 
elementu strukturalnego 5x5 powoduje powstanie dużych segmentów i utratę 
informacji o kształcie torbieli. Podobne wyniki uzyskuje się dla elementu 
strukturalnego 3x3 przy dużej ilości iteracji. Jedynie po jednokrotnym 
zastosowaniu tego filtru otrzymane wyniki zachowują rozpoznawany kształt torbieli 
i korzenia.&lt;/p&gt;

&lt;h4 id=&quot;filtr-medianowy&quot;&gt;Filtr medianowy&lt;/h4&gt;

&lt;p&gt;Ze zbioru uśredniających filtrów kontekstowych wybrano filtr medianowy. W tabelach
11 i 12 pokazano wyniki, a ich reprezentację graficzną umieszczono na rysunku 6. 
Można zauważyć, że otrzymane wielkości są porównywalne do wartości otrzymanych 
poprzednio dla złożonych filtrów morfologicznych. Wraz z zwiększaniem ilości 
iteracji, zachowując ten sam rozmiar okna otrzymuje się coraz mniej segmentów. 
Różnice te są jednak coraz mniejsze. Zwiększanie wielkości okna powoduje 
zmniejszenie ilości segmentów przy tej samej ilości iteracji. W tym przypadku 
także zwiększanie okna powoduje coraz mniejsze różnice w wynikach. W przypadku 
filtru medianowego problem zmiany kształtu segmentów granicznych nie jest 
widoczny nawet na obrazach poddanych wielu iteracjom, także tym gdzie rozmiar 
okna był większy. Granica pomiędzy torbielą, a korzeniem jest dobrze zaznaczona, 
wyostrzyła się. Na rysunku 7 pokazano wynik segmentacji obrazu po wstępnej 
filtracji filtrem medianowym o oknie 3x3, pięcioma iteracjami.&lt;/p&gt;

&lt;table&gt;
    &lt;caption&gt;
        Tabela 11: Filtr medianowy - ilość segmentów w zależności od ilości 
        iteracji i rozmiaru okna, bez wyrównania histogramu
    &lt;/caption&gt;
    &lt;colgroup&gt;
        &lt;col style=&quot;width: 20%&quot;&gt;
        &lt;col style=&quot;width: 10%&quot;&gt;
    &lt;/colgroup&gt;
    &lt;thead&gt;
        &lt;tr&gt;
            &lt;td colspan=&quot;2&quot; rowspan=&quot;2&quot;&gt;&lt;/td&gt;
            &lt;th colspan=&quot;5&quot;&gt;Ilość iteracji&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;th&gt;1&lt;/th&gt;
            &lt;th&gt;2&lt;/th&gt;
            &lt;th&gt;3&lt;/th&gt;
            &lt;th&gt;4&lt;/th&gt;
            &lt;th&gt;5&lt;/th&gt;
        &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
        &lt;tr&gt;
            &lt;th rowspan=&quot;3&quot;&gt;Rozmiar elementu strukturalnego&lt;/th&gt;
            &lt;th&gt;3x3&lt;/th&gt;
            &lt;td&gt;12215&lt;/td&gt;
            &lt;td&gt;8484&lt;/td&gt;
            &lt;td&gt;7515&lt;/td&gt;
            &lt;td&gt;6947&lt;/td&gt;
            &lt;td&gt;6664&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;th&gt;5x5&lt;/th&gt;
            &lt;td&gt;7655&lt;/td&gt;
            &lt;td&gt;4752&lt;/td&gt;
            &lt;td&gt;4036&lt;/td&gt;
            &lt;td&gt;3551&lt;/td&gt;
            &lt;td&gt;3303&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;th&gt;7x7&lt;/th&gt;
            &lt;td&gt;5740&lt;/td&gt;
            &lt;td&gt;3440&lt;/td&gt;
            &lt;td&gt;2830&lt;/td&gt;
            &lt;td&gt;2510&lt;/td&gt;
            &lt;td&gt;2283&lt;/td&gt;
        &lt;/tr&gt;
    &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
    &lt;caption&gt;
        Tabela 12: Filtr medianowy - ilość segmentów w zależności od ilości 
        iteracji i rozmiaru okna, z wyrównaniem histogramu
    &lt;/caption&gt;
    &lt;colgroup&gt;
        &lt;col style=&quot;width: 20%&quot;&gt;
        &lt;col style=&quot;width: 10%&quot;&gt;
    &lt;/colgroup&gt;
    &lt;thead&gt;
        &lt;tr&gt;
            &lt;td colspan=&quot;2&quot; rowspan=&quot;2&quot;&gt;&lt;/td&gt;
            &lt;th colspan=&quot;5&quot;&gt;Ilość iteracji&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;th&gt;1&lt;/th&gt;
            &lt;th&gt;2&lt;/th&gt;
            &lt;th&gt;3&lt;/th&gt;
            &lt;th&gt;4&lt;/th&gt;
            &lt;th&gt;5&lt;/th&gt;
        &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
        &lt;tr&gt;
            &lt;th rowspan=&quot;3&quot;&gt;Rozmiar elementu strukturalnego&lt;/th&gt;
            &lt;th&gt;3x3&lt;/th&gt;
            &lt;td&gt;11784&lt;/td&gt;
            &lt;td&gt;8202&lt;/td&gt;
            &lt;td&gt;7241&lt;/td&gt;
            &lt;td&gt;6727&lt;/td&gt;
            &lt;td&gt;6449&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;th&gt;5x5&lt;/th&gt;
            &lt;td&gt;7420&lt;/td&gt;
            &lt;td&gt;4665&lt;/td&gt;
            &lt;td&gt;3922&lt;/td&gt;
            &lt;td&gt;3462&lt;/td&gt;
            &lt;td&gt;3213&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;th&gt;7x7&lt;/th&gt;
            &lt;td&gt;5621&lt;/td&gt;
            &lt;td&gt;3327&lt;/td&gt;
            &lt;td&gt;2766&lt;/td&gt;
            &lt;td&gt;2427&lt;/td&gt;
            &lt;td&gt;2187&lt;/td&gt;
        &lt;/tr&gt;
    &lt;/tbody&gt;
&lt;/table&gt;

&lt;figure&gt;
    &lt;img src=&quot;/assets/img/gkiro/badania/badania_mediana.png&quot; 
        alt=&quot;Filtr medianowy - zależność ilości segmentów od ilości iteracji&quot;&gt;
    &lt;figcaption&gt;
        Rysunek 6: Filtr medianowy - zależność ilości segmentów od ilości iteracji
    &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure&gt;
    &lt;img src=&quot;/assets/img/gkiro/badania/filtr_medianowy_w3x3_x5.jpg&quot; 
        alt=&quot;Wynik segmentacji obrazu po wstępnej filtracji filtrem medianowym o oknie 3x3, pięcioma iteracjami&quot;&gt;
    &lt;figcaption&gt;
        Rysunek 7: Wynik segmentacji obrazu po wstępnej filtracji filtrem 
        medianowym o oknie 3x3, pięcioma iteracjami
    &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h4 id=&quot;filtr-rozmyty&quot;&gt;Filtr rozmyty&lt;/h4&gt;

&lt;p&gt;Ostatnim testowanym filtrem był filtr rozmyty zaimplementowany według opisu 
umieszczonego we &lt;a href=&quot;/2016/07/03/przeksztalcenia-morfologiczne-kontekstowe-i-rozmyte.html&quot;&gt;wpisie wprowadzającym&lt;/a&gt;. Otrzymane wyniki pokazano w tabelach
13 i 14 oraz na rysunku 8. Parametrem dla którego badano wpływ jego zmian na 
ilość segmentów był próg podobieństwa, czyli wartość różnicy pomiędzy wartościami 
dwóch sąsiadujących pikseli po przekroczeniu której para ta była uznawana za 
niepodobną. Ponieważ wynik działania filtru ma charakter losowy, dla każdej 
wartości progu podobieństwa przeprowadzono pięć prób, po czym obliczono średnie 
wartości oraz rozrzut wokół wartości średniej. Okazało się, że filtr 
charakteryzuje się dużą stabilnością otrzymywanych wyników. Z otrzymanego wykresu 
wynika, że najmniej segmentów otrzymuje się dla wartości progu podobieństwa 
mieszczących się pomiędzy 5 a 10. Dla wartości mniejszych ilość segmentów jest 
największa, a dla wartości większych rośnie i stabilizuje się. Otrzymane minimalne 
wartości są trzy razy mniejsze niż w przypadku braku filtracji. Podobnie jak w 
przypadku filtru medianowego, nie występuje problem zmiany kształtu granic 
oddzielających torbiel od otoczenia. Na rysunku 9 pokazano wynik segmentacji 
obrazu po wstępnej filtracji filtrem rozmytym z progiem podobieństwa 8px.&lt;/p&gt;

&lt;table&gt;
    &lt;caption&gt;
        Tabela 13: Filtr rozmyty - ilość segmentów w zależności od progu 
        podobieństwa i próby, bez wyrównania histogramu
    &lt;/caption&gt;
    &lt;colgroup&gt;
        &lt;col style=&quot;width: 20%&quot;&gt;
        &lt;col style=&quot;width: 10%&quot;&gt;
    &lt;/colgroup&gt;
    &lt;thead&gt;
        &lt;tr&gt;
            &lt;td colspan=&quot;2&quot; rowspan=&quot;2&quot;&gt;&lt;/td&gt;
            &lt;th colspan=&quot;7&quot;&gt;Próg podobieństwa&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;th&gt;2&lt;/th&gt;
            &lt;th&gt;5&lt;/th&gt;
            &lt;th&gt;8&lt;/th&gt;
            &lt;th&gt;10&lt;/th&gt;
            &lt;th&gt;20&lt;/th&gt;
            &lt;th&gt;30&lt;/th&gt;
            &lt;th&gt;40&lt;/th&gt;
        &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
        &lt;tr&gt;
            &lt;th rowspan=&quot;5&quot;&gt;Próba&lt;/th&gt;
            &lt;th&gt;1&lt;/th&gt;
            &lt;td&gt;9894&lt;/td&gt;
            &lt;td&gt;10089&lt;/td&gt;
            &lt;td&gt;9747&lt;/td&gt;
            &lt;td&gt;9865&lt;/td&gt;
            &lt;td&gt;9974&lt;/td&gt;
            &lt;td&gt;9944&lt;/td&gt;
            &lt;td&gt;9967&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;th&gt;2&lt;/th&gt;
            &lt;td&gt;9858&lt;/td&gt;
            &lt;td&gt;10101&lt;/td&gt;
            &lt;td&gt;9782&lt;/td&gt;
            &lt;td&gt;9893&lt;/td&gt;
            &lt;td&gt;9939&lt;/td&gt;
            &lt;td&gt;9967&lt;/td&gt;
            &lt;td&gt;9945&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;th&gt;3&lt;/th&gt;
            &lt;td&gt;9881&lt;/td&gt;
            &lt;td&gt;10137&lt;/td&gt;
            &lt;td&gt;9784&lt;/td&gt;
            &lt;td&gt;9886&lt;/td&gt;
            &lt;td&gt;9956&lt;/td&gt;
            &lt;td&gt;9976&lt;/td&gt;
            &lt;td&gt;9955&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;th&gt;4&lt;/th&gt;
            &lt;td&gt;9880&lt;/td&gt;
            &lt;td&gt;10071&lt;/td&gt;
            &lt;td&gt;9808&lt;/td&gt;
            &lt;td&gt;9860&lt;/td&gt;
            &lt;td&gt;10001&lt;/td&gt;
            &lt;td&gt;9973&lt;/td&gt;
            &lt;td&gt;9943&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;th&gt;5&lt;/th&gt;
            &lt;td&gt;9983&lt;/td&gt;
            &lt;td&gt;10051&lt;/td&gt;
            &lt;td&gt;9772&lt;/td&gt;
            &lt;td&gt;9830&lt;/td&gt;
            &lt;td&gt;9951&lt;/td&gt;
            &lt;td&gt;9986&lt;/td&gt;
            &lt;td&gt;9959&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;th colspan=&quot;2&quot;&gt;Średnia&lt;/th&gt;
            &lt;td&gt;9899,2&lt;/td&gt;
            &lt;td&gt;10089,8&lt;/td&gt;
            &lt;td&gt;9778,6&lt;/td&gt;
            &lt;td&gt;9866,8&lt;/td&gt;
            &lt;td&gt;9964,2&lt;/td&gt;
            &lt;td&gt;9969,2&lt;/td&gt;
            &lt;td&gt;9953,8&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;th colspan=&quot;2&quot;&gt;Odchylenie standardowe&lt;/th&gt;
            &lt;td&gt;48,60&lt;/td&gt;
            &lt;td&gt;32,45&lt;/td&gt;
            &lt;td&gt;22,06&lt;/td&gt;
            &lt;td&gt;24,79&lt;/td&gt;
            &lt;td&gt;24,12&lt;/td&gt;
            &lt;td&gt;15,67&lt;/td&gt;
            &lt;td&gt;9,96&lt;/td&gt;
        &lt;/tr&gt;
    &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
    &lt;caption&gt;
        Tabela 14: Filtr rozmyty - ilość segmentów w zależności od progu 
        podobieństwa i próby, z wyrównaniem histogramu
    &lt;/caption&gt;
    &lt;colgroup&gt;
        &lt;col style=&quot;width: 20%&quot;&gt;
        &lt;col style=&quot;width: 10%&quot;&gt;
    &lt;/colgroup&gt;
    &lt;thead&gt;
        &lt;tr&gt;
            &lt;td colspan=&quot;2&quot; rowspan=&quot;2&quot;&gt;&lt;/td&gt;
            &lt;th colspan=&quot;7&quot;&gt;Próg podobieństwa&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;th&gt;2&lt;/th&gt;
            &lt;th&gt;5&lt;/th&gt;
            &lt;th&gt;8&lt;/th&gt;
            &lt;th&gt;10&lt;/th&gt;
            &lt;th&gt;20&lt;/th&gt;
            &lt;th&gt;30&lt;/th&gt;
            &lt;th&gt;40&lt;/th&gt;
        &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
        &lt;tr&gt;
            &lt;th rowspan=&quot;5&quot;&gt;Próba&lt;/th&gt;
            &lt;th&gt;1&lt;/th&gt;
            &lt;td&gt;10457&lt;/td&gt;
            &lt;td&gt;10072&lt;/td&gt;
            &lt;td&gt;10060&lt;/td&gt;
            &lt;td&gt;10067&lt;/td&gt;
            &lt;td&gt;10294&lt;/td&gt;
            &lt;td&gt;10199&lt;/td&gt;
            &lt;td&gt;10238&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;th&gt;2&lt;/th&gt;
            &lt;td&gt;10527&lt;/td&gt;
            &lt;td&gt;10103&lt;/td&gt;
            &lt;td&gt;10043&lt;/td&gt;
            &lt;td&gt;10046&lt;/td&gt;
            &lt;td&gt;10229&lt;/td&gt;
            &lt;td&gt;10216&lt;/td&gt;
            &lt;td&gt;10192&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;th&gt;3&lt;/th&gt;
            &lt;td&gt;10595&lt;/td&gt;
            &lt;td&gt;10107&lt;/td&gt;
            &lt;td&gt;10016&lt;/td&gt;
            &lt;td&gt;10000&lt;/td&gt;
            &lt;td&gt;10165&lt;/td&gt;
            &lt;td&gt;10212&lt;/td&gt;
            &lt;td&gt;10187&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;th&gt;4&lt;/th&gt;
            &lt;td&gt;10503&lt;/td&gt;
            &lt;td&gt;10091&lt;/td&gt;
            &lt;td&gt;10024&lt;/td&gt;
            &lt;td&gt;10028&lt;/td&gt;
            &lt;td&gt;10231&lt;/td&gt;
            &lt;td&gt;10213&lt;/td&gt;
            &lt;td&gt;10187&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;th&gt;5&lt;/th&gt;
            &lt;td&gt;10518&lt;/td&gt;
            &lt;td&gt;10120&lt;/td&gt;
            &lt;td&gt;10013&lt;/td&gt;
            &lt;td&gt;10002&lt;/td&gt;
            &lt;td&gt;10246&lt;/td&gt;
            &lt;td&gt;10218&lt;/td&gt;
            &lt;td&gt;10197&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;th colspan=&quot;2&quot;&gt;Średnia&lt;/th&gt;
            &lt;td&gt;10520,0&lt;/td&gt;
            &lt;td&gt;10098,6&lt;/td&gt;
            &lt;td&gt;10031,2&lt;/td&gt;
            &lt;td&gt;10028,6&lt;/td&gt;
            &lt;td&gt;10233,0&lt;/td&gt;
            &lt;td&gt;10211,6&lt;/td&gt;
            &lt;td&gt;10200,2&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;th colspan=&quot;2&quot;&gt;Odchylenie standardowe&lt;/th&gt;
            &lt;td&gt;49,84&lt;/td&gt;
            &lt;td&gt;18,12&lt;/td&gt;
            &lt;td&gt;19,89&lt;/td&gt;
            &lt;td&gt;28,74&lt;/td&gt;
            &lt;td&gt;46,19&lt;/td&gt;
            &lt;td&gt;7,44&lt;/td&gt;
            &lt;td&gt;21,53&lt;/td&gt;
        &lt;/tr&gt;
    &lt;/tbody&gt;
&lt;/table&gt;

&lt;figure&gt;
    &lt;img src=&quot;/assets/img/gkiro/badania/badania_fuzzy.png&quot; 
        alt=&quot;Filtr rozmyty - zależność ilości segmentów od ilości iteracji&quot;&gt;
    &lt;figcaption&gt;
        Rysunek 8: Filtr rozmyty - zależność ilości segmentów od ilości iteracji
    &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure&gt;
    &lt;img src=&quot;/assets/img/gkiro/badania/filtr_rozmyty_t8.jpg&quot; 
        alt=&quot;Wynik segmentacji obrazu po filtracji filtrem rozmytym z progiem podobieństwa 8px&quot;&gt;
    &lt;figcaption&gt;
        Rysunek 9: Wynik segmentacji obrazu po filtracji filtrem rozmytym z 
        progiem podobieństwa 8px
    &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h3 id=&quot;badanie-wp%C5%82ywu-wst%C4%99pnej-filtracji-obrazu-na-czas-wykonania-procesu-segmentacji&quot;&gt;Badanie wpływu wstępnej filtracji obrazu na czas wykonania procesu segmentacji&lt;/h3&gt;

&lt;p&gt;Postanowiono zbadać czas wykonania procesu dla dwóch wybranych najlepszymi filtrów 
- filtru medianowego z oknem 3x3 i pięcioma iteracjami oraz dla filtru rozmytego 
z progiem podobieństwa ustawionym na 10 pikseli. Oba filtry zostały poprzedzone 
wyrównaniem histogramu. Postanowiono przeprowadzić po pięć prób dla każdego z 
filtrów. Badania przeprowadzono na tym samym &lt;a href=&quot;https://www.flickr.com/photos/bc_the_path/3234972460/&quot;&gt;obrazie testowym który zastosowano 
w poprzednich badaniach&lt;/a&gt;. Badania przeprowadzono na komputerze wyposażonym w 
procesor Athlon II X2 250 i 4GB pamięci RAM.&lt;/p&gt;

&lt;h4 id=&quot;filtr-medianowy---czas-wykonania-procesu&quot;&gt;Filtr medianowy - czas wykonania procesu&lt;/h4&gt;

&lt;p&gt;W tabeli 15 umieszczono czasy wykonani poszczególnych operacji składających się 
na proces segmentacji, tj.: wstępnej filtracji, segmentacji oraz oznaczania 
segmentów. Operację oznaczania segmentów sprawdzono dla dwóch zaproponowanych 
algorytmów, &lt;em&gt;SegmentMarkerBasic&lt;/em&gt; - powolnego algorytmu polegającego na złączaniu 
segmentów, &lt;em&gt;SegmentMarkerFlooding&lt;/em&gt; - szybkiego algorytmu polegającego na 
sprawdzaniu pikseli sąsiadujących w pierwszej kolejności, algorytmy te zostaną 
opisane w kolejnych wpisach. W tabeli tej podano także całkowity czas wykonania 
procesu. W wyniku, dla obrazu testowego, otrzymano średni całkowity czas równy 
182,33 sekund w przypadku zastosowania algorytmu &lt;em&gt;SegmentMarkerBasic&lt;/em&gt; oraz 1,32 
sekundy w przypadku zastosowania algorytmu &lt;em&gt;SegmentMarkerFlooding&lt;/em&gt;. Operacja 
wykonania filtru medianowego na obrazie miała najmniejszy wpłyn na czas całkowity, 
podobnie operacja segmentacji wododziałowej. Operacja oznaczania segmentów, w 
przypadku wybrania wolniejszego algorytmu ma największy wpływ na całkowity czas 
procesu.&lt;/p&gt;

&lt;table&gt;
    &lt;caption&gt;
        Tabela 15: Filtr medianowy - czas wykonania procesu segmentacji
    &lt;/caption&gt;
    &lt;colgroup&gt;
        &lt;col style=&quot;width: 20%&quot;&gt;
        &lt;col style=&quot;width: 10%&quot;&gt;
    &lt;/colgroup&gt;
    &lt;thead&gt;
        &lt;tr&gt;
            &lt;td colspan=&quot;2&quot; rowspan=&quot;2&quot;&gt;&lt;/td&gt;
            &lt;th colspan=&quot;6&quot;&gt;Czas [s]&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;th&gt;filtracja&lt;/th&gt;
            &lt;th&gt;segmentacja&lt;/th&gt;
            &lt;th&gt;oznaczanie segmentów (basic)&lt;/th&gt;
            &lt;th&gt;oznaczanie segmentów (flooding)&lt;/th&gt;
            &lt;th&gt;razem (basic)&lt;/th&gt;
            &lt;th&gt;razem (flooding)&lt;/th&gt;
        &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
        &lt;tr&gt;
            &lt;th rowspan=&quot;5&quot;&gt;Próba&lt;/th&gt;
            &lt;th&gt;1&lt;/th&gt;
            &lt;td&gt;0,00&lt;/td&gt;
            &lt;td&gt;1,00&lt;/td&gt;
            &lt;td&gt;172,88&lt;/td&gt;
            &lt;td&gt;0,32&lt;/td&gt;
            &lt;td&gt;173,88&lt;/td&gt;
            &lt;td&gt;1,32&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;th&gt;2&lt;/th&gt;
            &lt;td&gt;0,00&lt;/td&gt;
            &lt;td&gt;1,00&lt;/td&gt;
            &lt;td&gt;166,60&lt;/td&gt;
            &lt;td&gt;0,39&lt;/td&gt;
            &lt;td&gt;167,60&lt;/td&gt;
            &lt;td&gt;1,39&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;th&gt;3&lt;/th&gt;
            &lt;td&gt;0,00&lt;/td&gt;
            &lt;td&gt;1,00&lt;/td&gt;
            &lt;td&gt;198,29&lt;/td&gt;
            &lt;td&gt;0,44&lt;/td&gt;
            &lt;td&gt;199,29&lt;/td&gt;
            &lt;td&gt;1,44&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;th&gt;4&lt;/th&gt;
            &lt;td&gt;0,00&lt;/td&gt;
            &lt;td&gt;2,00&lt;/td&gt;
            &lt;td&gt;199,82&lt;/td&gt;
            &lt;td&gt;0,42&lt;/td&gt;
            &lt;td&gt;201,82&lt;/td&gt;
            &lt;td&gt;2,42&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;th&gt;5&lt;/th&gt;
            &lt;td&gt;0,00&lt;/td&gt;
            &lt;td&gt;1,00&lt;/td&gt;
            &lt;td&gt;168,05&lt;/td&gt;
            &lt;td&gt;0,30&lt;/td&gt;
            &lt;td&gt;169,05&lt;/td&gt;
            &lt;td&gt;1,30&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;th colspan=&quot;2&quot;&gt;Średnia&lt;/th&gt;
            &lt;td&gt;0,00&lt;/td&gt;
            &lt;td&gt;1,20&lt;/td&gt;
            &lt;td&gt;181,13&lt;/td&gt;
            &lt;td&gt;0,37&lt;/td&gt;
            &lt;td&gt;182,33&lt;/td&gt;
            &lt;td&gt;1,57&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;th colspan=&quot;2&quot;&gt;Odchylenie standardowe&lt;/th&gt;
            &lt;td&gt;0,00&lt;/td&gt;
            &lt;td&gt;0,45&lt;/td&gt;
            &lt;td&gt;16,54&lt;/td&gt;
            &lt;td&gt;0,06&lt;/td&gt;
            &lt;td&gt;16,82&lt;/td&gt;
            &lt;td&gt;0,48&lt;/td&gt;
        &lt;/tr&gt;
    &lt;/tbody&gt;
&lt;/table&gt;

&lt;h4 id=&quot;filtr-rozmyty---czas-wykonania-procesu&quot;&gt;Filtr rozmyty - czas wykonania procesu&lt;/h4&gt;

&lt;p&gt;W tabeli 16 umieszczono zmierzone czasy poszczególnych składowych procesu w 
przypadku zastosowania filtru rozmytego. Składowe procesu są takie same jak w 
przypadku filtru medianowego. Wyniki wskazują na wzrost znaczenia czasy potrzebnego 
na filtrację obrazu w całym procesie. Średnio ten czas wynosi 24,40 sekund, co 
jest zauważalnym czasem, zwłaszcza przy zastosowaniu szybkiego algorytmu oznaczania 
segmentów. Jest to także duży wzrost w porównaniu do filtracji medianowej która 
wykonywana była niemal natychmiastowo. Średni czas całego procesu, w przypadku 
zastosowania algorytmu &lt;em&gt;SegmentMarkerBasic&lt;/em&gt; wzrósł do 212,38 sekund, a w przypadku 
algorytmu &lt;em&gt;SegmentMarkerFlooding&lt;/em&gt; czas ten wzrósł do 25,98 sekund.&lt;/p&gt;

&lt;table&gt;
    &lt;caption&gt;
        Tabela 16: Filtr rozmyty - czas wykonania procesu segmentacji
    &lt;/caption&gt;
    &lt;colgroup&gt;
        &lt;col style=&quot;width: 20%&quot;&gt;
        &lt;col style=&quot;width: 10%&quot;&gt;
    &lt;/colgroup&gt;
    &lt;thead&gt;
        &lt;tr&gt;
            &lt;td colspan=&quot;2&quot; rowspan=&quot;2&quot;&gt;&lt;/td&gt;
            &lt;th colspan=&quot;6&quot;&gt;Czas [s]&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;th&gt;filtracja&lt;/th&gt;
            &lt;th&gt;segmentacja&lt;/th&gt;
            &lt;th&gt;oznaczanie segmentów (basic)&lt;/th&gt;
            &lt;th&gt;oznaczanie segmentów (flooding)&lt;/th&gt;
            &lt;th&gt;razem (basic)&lt;/th&gt;
            &lt;th&gt;razem (flooding)&lt;/th&gt;
        &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
        &lt;tr&gt;
            &lt;th rowspan=&quot;5&quot;&gt;Próba&lt;/th&gt;
            &lt;th&gt;1&lt;/th&gt;
            &lt;td&gt;28,00&lt;/td&gt;
            &lt;td&gt;1,00&lt;/td&gt;
            &lt;td&gt;188,42&lt;/td&gt;
            &lt;td&gt;0,47&lt;/td&gt;
            &lt;td&gt;217,42&lt;/td&gt;
            &lt;td&gt;29,47&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;th&gt;2&lt;/th&gt;
            &lt;td&gt;22,00&lt;/td&gt;
            &lt;td&gt;1,00&lt;/td&gt;
            &lt;td&gt;180,15&lt;/td&gt;
            &lt;td&gt;0,37&lt;/td&gt;
            &lt;td&gt;203,15&lt;/td&gt;
            &lt;td&gt;23,37&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;th&gt;3&lt;/th&gt;
            &lt;td&gt;23,00&lt;/td&gt;
            &lt;td&gt;1,00&lt;/td&gt;
            &lt;td&gt;197,79&lt;/td&gt;
            &lt;td&gt;0,37&lt;/td&gt;
            &lt;td&gt;221,79&lt;/td&gt;
            &lt;td&gt;24,37&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;th&gt;4&lt;/th&gt;
            &lt;td&gt;23,00&lt;/td&gt;
            &lt;td&gt;1,00&lt;/td&gt;
            &lt;td&gt;168,58&lt;/td&gt;
            &lt;td&gt;0,37&lt;/td&gt;
            &lt;td&gt;192,58&lt;/td&gt;
            &lt;td&gt;24,37&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;th&gt;5&lt;/th&gt;
            &lt;td&gt;26,00&lt;/td&gt;
            &lt;td&gt;2,00&lt;/td&gt;
            &lt;td&gt;198,98&lt;/td&gt;
            &lt;td&gt;0,34&lt;/td&gt;
            &lt;td&gt;226,98&lt;/td&gt;
            &lt;td&gt;28,34&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;th colspan=&quot;2&quot;&gt;Średnia&lt;/th&gt;
            &lt;td&gt;24,40&lt;/td&gt;
            &lt;td&gt;1,20&lt;/td&gt;
            &lt;td&gt;186,78&lt;/td&gt;
            &lt;td&gt;0,38&lt;/td&gt;
            &lt;td&gt;212,38&lt;/td&gt;
            &lt;td&gt;25,98&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;th colspan=&quot;2&quot;&gt;Odchylenie standardowe&lt;/th&gt;
            &lt;td&gt;2,51&lt;/td&gt;
            &lt;td&gt;0,45&lt;/td&gt;
            &lt;td&gt;12,73&lt;/td&gt;
            &lt;td&gt;0,05&lt;/td&gt;
            &lt;td&gt;14,18&lt;/td&gt;
            &lt;td&gt;2,73&lt;/td&gt;
        &lt;/tr&gt;
    &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;wnioski&quot;&gt;Wnioski&lt;/h3&gt;

&lt;p&gt;Przeprowadzono badania mające na celu wskazanie najlepszego, biorąc pod uwagę 
ilość i jakość otrzymanych segmentów, algorytmu przygotowującego zdjęcie do 
analizy. Wzięto pod uwagę podstawowe filtry morfologiczne, tj.: erozję i dylację, 
złożone filtry morfologiczne, tj.: otwarcie i zamknięcie oraz ich złożenie, 
filtr medianowy oraz filtr wykorzystujący logikę rozmytą. &lt;strong&gt;W wyniku przeprowadzonych 
badań, okazało się że filtry morfologiczne z powodu zmiany kształtu otrzymywanych 
w następstwie ich użycia segmentów granicznych, czyli znajdujących się w miejscach 
o największych zmianach gradientu, nie powinny być wykorzystywane do wstępnej 
filtracji obrazu przed jego segmentacją. Otrzymano dobre wyniki dla filtru 
medianowego o oknie 3x3, dla każdej ze zbadanych ilości iteracji. Filtr ten nie 
powoduje także zmiany kształtu segmentów granicznych. Dobre wyniki przyniosło 
także zastosowanie zaimplementowanego algorytmu wykorzystującego logikę rozmytą&lt;/strong&gt;. 
Przeprowadzono badania polegające na znalezieniu optymalnej wartości progu 
podobieństwa, jednego z parametrów tego algorytmu, dla której ilość segmentów jest 
najmniejsza. Wyznaczono lokalne minimum dla tego parametru, wynoszące 10 pikseli. 
Oznacza to że dla mniejszej i większej wartości progu filtr ten działa gorzej 
nie odnajdując wszystkich zaszumionych pikseli co powoduje wzrost lokalnych 
minimów obrazu a co za tym idzie ilości segmentów.&lt;/p&gt;

&lt;p&gt;Przeprowadzono także badania polegające na zmierzeniu czasu jaki potrzebny jest 
na przeprowadzenie całego procesu segmentacji dla dwóch filtrów: filtru rozmytego 
z progiem 10px oraz filtru medianowego z oknem 3x3 i pięcioma iteracjami. 
Otrzymane wyniki wskazują, że &lt;strong&gt;filtr medianowy jest znacznie szybszy od 
zaimplementowanego filtru rozmytego&lt;/strong&gt;. Jest to spowodowane większą złożonością 
obliczeniową algorytmu rozmytego, a także tym że filtr medianowy pochodził z 
napisanej w C++ i zoptymalizowanej do tego celu biblioteki OpenCV.&lt;/p&gt;

&lt;p&gt;Po przeprowadzeniu badań zdecydowano się zaimplementować w systemie obsługującym 
gabinet dentystyczny algorytm wykorzystujący filtr medianowy z oknem 3x3 i 
pięcioma iteracjami.&lt;/p&gt;

&lt;p&gt;Podczas testów czasu wykonania procesu segmentacji pokazano że największe narzut 
generuje algorytm &lt;em&gt;SegmentMarkerBasic&lt;/em&gt;. Z powodu mogącego się pojawić wyjątku 
generowanego przez alternatywny algorytm został on jednak wybrany i zaimplementowany 
w systemie obsługi gabinetu dentystycznego.&lt;/p&gt;

&lt;p&gt;Zamierzano napisać algorytm pozwalający na zautomatyzowanie procesu oznaczania na 
zdjęciach RTG patologicznych zmian okołowierzchołkowych zęba spowodowanych stanem 
zapalnym. &lt;strong&gt;Napisano algorytm wykorzystujący oznaczone segmenty, ograniczający 
ingerencję użytkownika do wybrania segmentu znajdującego się wewnątrz takiej 
zmiany oraz drugiego poza nią. Algorytm ten wybiera kolejne segmenty biorąc pod 
uwagę średnie wartości pikseli we wskazanych segmentach.&lt;/strong&gt; Nie zawsze jednak wynik 
jego działania jest zgodny z oczekiwaniami. W związku z tym należałoby go 
rozbudować o algorytm działający w sposób adaptacyjny.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Treść tego wpisu zawiera fragmenty mojej pracy dyplomowej &lt;strong&gt;&quot;Badanie wpływu 
wstępnej filtracji na proces segmentacji w analizie patologicznych zmian w 
obrębie zębów widocznych na zdjęciach RTG&quot;&lt;/strong&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Zobacz także:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/2016/07/03/przeksztalcenia-morfologiczne-kontekstowe-i-rozmyte.html&quot;&gt;Przekształcenia morfologiczne, kontekstowe i rozmyte&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2016/07/24/emgucvdemo-aplikacja-testujaca-wplyw-wybranych-filtrow-na-wyniki-segmentacji-wododzialowej.html&quot;&gt;EmguCVDemo - aplikacja testująca wpływ wybranych filtrów na wyniki segmentacji wododziałowej&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content:encoded>
            <pubDate>2016-08-06T15:50:00+02:00</pubDate>
            <link>http://lion.net.pl/2016/08/06/wplyw-wstepnej-filtracji-na-segmentacje-wododzialowa.html</link>
            <atom:link href="http://lion.net.pl/2016/08/06/wplyw-wstepnej-filtracji-na-segmentacje-wododzialowa.html" rel="self" type="application/rss+xml" />
            <guid isPermaLink="true">http://lion.net.pl/2016/08/06/wplyw-wstepnej-filtracji-na-segmentacje-wododzialowa.html</guid>
        </item>
            </channel>
</rss>